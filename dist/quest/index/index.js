const postQuest = {
	"101": [102],
	"102": [103],
	"103": [104, 105],
	"104": [115, 116, 174],
	"105": [106, 108, 254, 401, 612, 816],
	"106": [107, 109],
	"107": [113],
	"108": [111],
	"109": [110, 704],
	"110": [118, 646],
	"111": [112],
	"112": [896],
	"113": [114, 119, 635],
	"114": [185, 626],
	"115": [215],
	"116": [120, 146, 838],
	"117": [217],
	"118": [611],
	"119": [121, 163, 219],
	"120": [128, 222, 274],
	"121": [122, 124, 125, 127, 129, 223],
	"122": [123, 126, 224],
	"123": [143, 148, 161, 225],
	"124": [227],
	"125": [131, 231],
	"126": [232],
	"127": [139, 405],
	"128": [138, 233],
	"129": [130],
	"130": [410],
	"131": [133, 172, 239],
	"132": [144, 149, 240, 805],
	"133": [136, 244],
	"134": [245],
	"135": [246],
	"136": [152, 248],
	"137": [140, 147, 249, 418],
	"138": [250],
	"139": [414],
	"141": [251],
	"143": [253],
	"144": [258],
	"145": [259],
	"146": [261, 618],
	"147": [262],
	"148": [170, 266],
	"149": [267, 268],
	"150": [269],
	"151": [270],
	"152": [162, 307],
	"153": [275],
	"154": [276],
	"155": [277],
	"156": [183, 278],
	"157": [279],
	"158": [281],
	"161": [287],
	"162": [288],
	"163": [289],
	"164": [293],
	"165": [166, 182, 879],
	"166": [294, 630],
	"167": [633, 649],
	"168": [295],
	"169": [296],
	"170": [297],
	"171": [807, 819],
	"172": [808],
	"173": [814],
	"174": [817],
	"175": [820],
	"176": [821],
	"177": [339, 826],
	"178": [835],
	"179": [836],
	"180": [856],
	"181": [858],
	"182": [859],
	"183": [189, 860],
	"184": [196, 863],
	"185": [669, 864],
	"186": [871],
	"188": [875],
	"189": [877],
	"190": [319],
	"191": [195],
	"192": [881],
	"193": [323],
	"194": [887],
	"195": [328, 891],
	"196": [892],
	"201": [156, 177, 185, 211, 212, 216, 286, 336, 807, 892],
	"202": [203],
	"203": [204, 501, 502],
	"204": [201, 205, 689],
	"205": [206, 286],
	"206": [207, 255, 816, 830],
	"207": [208, 416],
	"208": [209],
	"209": [824],
	"210": [327],
	"213": [222],
	"214": [221, 893],
	"215": [117],
	"216": [171, 172, 210, 213, 214, 218, 286, 311, 312, 634, 678, 810, 855, 864],
	"217": [861],
	"218": [220, 226, 316, 846],
	"219": [901],
	"220": [228, 635, 854],
	"221": [257, 261, 264],
	"223": [890],
	"224": [147, 155, 182],
	"225": [183, 689],
	"226": [230],
	"227": [152, 154],
	"228": [229, 241, 613, 645, 819, 857],
	"229": [242],
	"230": [285, 881],
	"233": [263, 822, 842],
	"235": [236],
	"239": [132, 175, 188, 264, 412, 812],
	"240": [156, 177, 265],
	"242": [243],
	"243": [276, 809, 888],
	"245": [135],
	"246": [142],
	"247": [324, 845, 879],
	"248": [137, 252],
	"249": [265, 271],
	"250": [141, 614, 615],
	"253": [616],
	"255": [256, 876],
	"258": [145, 180],
	"259": [260],
	"260": [285],
	"263": [162, 189],
	"264": [161, 164, 266, 626, 822],
	"265": [280, 297, 628],
	"266": [166],
	"267": [150],
	"269": [190, 271],
	"270": [184],
	"271": [151],
	"272": [283, 417],
	"273": [236, 828, 888],
	"274": [153, 277],
	"275": [194],
	"278": [309, 636],
	"280": [284],
	"281": [282],
	"283": [620],
	"284": [845],
	"287": [169, 290, 420, 622, 623, 851],
	"289": [168],
	"290": [292],
	"292": [916],
	"293": [165, 173, 174, 629],
	"294": [625, 631, 645],
	"295": [169, 171, 178],
	"296": [170, 641],
	"299": [893],
	"301": [303],
	"302": [646],
	"303": [181, 284, 299, 302, 304, 326, 648, 689, 691, 694, 805, 825, 858, 863, 890],
	"304": [650],
	"306": [134],
	"307": [273],
	"308": [419],
	"309": [157, 279],
	"311": [280],
	"312": [636],
	"320": [880],
	"323": [325, 884],
	"324": [683, 885, 886],
	"330": [331],
	"331": [695],
	"333": [283, 334],
	"335": [336],
	"337": [339],
	"401": [402, 404],
	"402": [187, 403, 424, 429, 806],
	"405": [406],
	"406": [408, 422],
	"408": [409],
	"410": [411, 420, 643],
	"412": [247, 413],
	"413": [431],
	"414": [415],
	"416": [272, 432],
	"418": [308, 316],
	"419": [424],
	"420": [624, 809],
	"422": [423],
	"423": [651],
	"424": [425],
	"425": [433, 663],
	"426": [428],
	"427": [428],
	"429": [187, 871],
	"430": [431],
	"431": [291],
	"432": [433],
	"502": [503],
	"503": [504],
	"601": [602],
	"602": [603, 605],
	"603": [193, 195, 604],
	"604": [646, 652],
	"605": [606, 621, 679, 680, 693, 901],
	"606": [607, 896],
	"607": [608, 659, 661, 666, 673],
	"608": [609, 617, 619, 669],
	"611": [306],
	"612": [661],
	"613": [312],
	"618": [619, 662],
	"619": [638, 658, 689],
	"621": [833],
	"623": [620],
	"624": [164, 629],
	"625": [632],
	"626": [627, 630],
	"627": [628, 629],
	"629": [631],
	"630": [632],
	"632": [167],
	"634": [811],
	"635": [312],
	"636": [815],
	"638": [637, 639, 671],
	"641": [642, 690],
	"642": [643, 647],
	"643": [644],
	"646": [648],
	"647": [649],
	"648": [652],
	"649": [650, 651],
	"659": [660],
	"661": [662, 664],
	"662": [425],
	"664": [665, 683],
	"665": [667],
	"669": [670, 671],
	"673": [188, 290, 317, 674, 689, 876],
	"674": [290, 298, 675, 676, 677, 688],
	"676": [318, 678],
	"679": [680],
	"680": [191, 686, 880],
	"682": [322, 430, 685, 693],
	"685": [686, 687],
	"689": [690],
	"693": [694, 695],
	"694": [897],
	"695": [696],
	"701": [702],
	"702": [678, 689, 703],
	"703": [705],
	"704": [610],
	"805": [192, 806],
	"806": [813],
	"808": [191],
	"809": [647, 828],
	"810": [426, 811],
	"811": [812],
	"812": [813],
	"814": [815],
	"815": [846],
	"817": [818, 823],
	"818": [639],
	"819": [176],
	"820": [844],
	"821": [186],
	"825": [642],
	"826": [827],
	"827": [837],
	"828": [656, 829, 833],
	"829": [844],
	"835": [179],
	"836": [837],
	"838": [705, 839, 851],
	"839": [423, 659, 853, 870],
	"846": [656, 658, 848, 850, 854, 862, 865],
	"849": [850],
	"850": [660],
	"851": [181, 852],
	"854": [872],
	"855": [856, 857],
	"856": [158],
	"859": [666],
	"861": [862],
	"864": [670, 865],
	"869": [427],
	"870": [186, 429],
	"871": [193],
	"873": [874, 875],
	"875": [325],
	"876": [878],
	"880": [884, 889],
	"886": [684],
	"894": [895],
	"896": [897],
	"897": [696],
	"901": [902],
	"902": [903]
};
var zhCN = {
	"101": "编组任意舰船2只",
	"102": "编组驱逐4只",
	"103": "编组轻巡（旗舰）+驱逐3只",
	"104": "编组任意舰船6只",
	"105": "编组轻巡2只",
	"106": "编组重巡2只",
	"107": "编组空母（旗舰）+驱逐3只",
	"108": "编组天龍+龍田",
	"109": "编组川内+神通+那珂",
	"110": "编组妙高+那智+足柄+羽黒",
	"111": "编组扶桑+山城",
	"112": "编组伊勢+日向",
	"113": "编组战舰1只+重巡2只，航战不可",
	"114": "编组赤城+加賀+飛龍+蒼龍，其它舰船不可",
	"115": "编组任意舰船1只，限第二舰队",
	"116": "编组水母1只",
	"117": "编组空母1只+驱逐2只，限第二舰队",
	"118": "编组金剛+比叡+榛名+霧島",
	"119": "编组鳥海+青葉+加古+古鷹+天龍+高速舰船1只",
	"120": "编组暁+響+雷+電，其它舰船不可",
	"121": "编组愛宕+高雄+鳥海+摩耶",
	"122": "编组扶桑+山城+最上+時雨",
	"123": "编组翔鶴+瑞鶴+驱逐2只",
	"124": "编组鳥海+青葉+衣笠+加古+古鷹+天龍",
	"125": "编组潜水艇/潜水空母2只",
	"126": "编组航战2只+航巡2只",
	"127": "编组潜水艇/潜水空母3只",
	"128": "编组古鷹+加古+青葉+衣笠",
	"129": "编组那智+足柄+多摩+木曾",
	"130": "编组阿武隈+曙+潮+霞+不知火",
	"131": "编组朝潮+満潮+大潮+荒潮，其它舰船不可",
	"132": "编组霞+霰+陽炎+不知火，其它舰船不可",
	"133": "编组睦月+如月+弥生+望月，其它舰船不可",
	"134": "编组Lv.90~99任意舰船（旗舰）",
	"135": "编组Lv.100或以上任意舰船（旗舰）+任意舰船5只",
	"136": "编组睦月+弥生+卯月+望月，其它舰船不可",
	"137": "编组妙高+那智+羽黒",
	"138": "编组飛龍改二（旗舰）+蒼龍+驱逐2只",
	"139": "编组潜水母舰（大鲸）（旗舰）+潜水艇/潜水空母4只",
	"140": "编组妙高改二（旗舰），限第一舰队",
	"141": "编组蒼龍改二（旗舰）+飛龍改二+驱逐2只",
	"142": "编组金剛改二+比叡改二+榛名改二+霧島改二",
	"143": "编组雲龍（旗舰），限第一舰队",
	"144": "编组長門+陸奥+扶桑+山城",
	"145": "编组大和级/長門级/伊勢级/扶桑级3只+轻巡1只",
	"146": "编组明石（旗舰），限第一舰队",
	"147": "编组扶桑+山城+最上+時雨+満潮",
	"148": "编组霞（旗舰）+足柄+轻巡1只+驱逐3只",
	"149": "编组吹雪+白雪+初雪+叢雲，其它舰船不可",
	"150": "编组初春+子日+若葉+初霜，其它舰船不可",
	"151": "编组皐月+文月+長月+驱逐1只，其它舰船不可",
	"152": "编组鳥海改二（旗舰）+天龍/古鷹/加古/青葉/夕張/衣笠任意5只，限第一舰队",
	"153": "编组天龍+龍田+任意舰船2只或以上",
	"154": "编组比叡+霧島+長良+暁+雷+電",
	"155": "编组暁改二（旗舰）+響+雷+電",
	"156": "编组阿武隈（旗舰）+響+初霜+若葉+五月雨+島風",
	"157": "编组阿武隈改二（旗舰）+響+夕雲+長波+秋雲+島風",
	"158": "编组長門改二（旗舰）+陸奥改二（二号舰）",
	"161": "编组翔鶴+瑞鶴+朧+秋雲",
	"162": "编组那智改二+足柄改二+多摩+木曾",
	"163": "编组足柄（旗舰）+球磨+長良",
	"164": "编组瑞鶴改（旗舰）+瑞鳳+千歳航(轻母)+千代田航(轻母)",
	"165": "编组伊勢改+日向改",
	"166": "编组瑞鶴改（旗舰）+瑞鳳改+千歳航(轻母)+千代田航(轻母)+伊勢改+日向改",
	"167": "编组翔鶴改二+瑞鶴改二+驱逐2只",
	"168": "编组名取（旗舰）+五十鈴+鬼怒",
	"169": "编组空母2只+航巡/航战2只+驱逐2只",
	"170": "编组霞（旗舰）+足柄+大淀+朝霜+清霜",
	"171": "编组五十鈴改二（旗舰）+皐月改二+卯月改",
	"172": "编组白露改（旗舰）+時雨+春雨+五月雨，其它舰船不可",
	"173": "编组川内改二（旗舰）+江風改二+時雨改二+驱逐2只，其它舰船不可",
	"174": "编组轻巡（旗舰）+驱逐4只",
	"175": "编组朝潮改二（旗舰）+大潮+満潮+荒潮",
	"176": "编组朝潮改二丁+大潮改二",
	"177": "编组磯波+浦波+綾波+敷波",
	"178": "编组鬼怒+青葉+北上+大井",
	"179": "编组鬼怒改二（旗舰）+北上改二/大井改二/球磨改/青葉改/浦波改/敷波改任意5只",
	"180": "编组長門改二+陸奥改，限第一舰队",
	"181": "编组熊野改二（旗舰）+鈴谷改二（二号舰）+最上改+三隈改，限第一舰队",
	"182": "编组Lv.50或以上伊勢改/日向改（旗舰）+Lv.50或以上伊勢改/日向改（二号舰）+轻巡1只+驱逐2只+任意舰船1只，限第一舰队",
	"183": "编组由良改二（旗舰）+村雨+夕立+春雨+五月雨+驱逐1只，限第一舰队",
	"184": "编组文月改二+皐月改二+水無月改+長月改",
	"185": "编组Saratoga Mk.II/Saratoga Mk.II Mod.2（旗舰）+軽巡洋艦1只+駆逐艦2只，限第一舰队",
	"186": "编组朝潮改二+大潮改二+荒潮改二+満潮改二",
	"187": "编组最上+時雨+満潮+朝雲+山雲，限第三舰队",
	"188": "编组長波改二（旗舰）+高波改/沖波改/朝霜改任意1只",
	"189": "编组村雨改二（旗舰）+由良改二/夕立改二/春雨改/五月雨改/秋月改任意3只+任意舰船2只",
	"190": "编组若葉改+初春改二+初霜改二+驱逐0~1只",
	"191": "编组浦風改1只+谷風改1只+磯風乙改1只+浜風乙改1只",
	"192": "编组霰改二1只+霞改二/霞改二乙1只+陽炎改1只+不知火改1只",
	"193": "编组陽炎改二+不知火改二+黒潮改二+Lv.70或以上陽炎级/夕雲级3只",
	"194": "编组天龍改二+龍田改二",
	"195": "编组磯風乙改+浜風乙改+浦風丁改+谷風丁改",
	"196": "编组夕雲改二+巻雲改二，其它舰船不可",
	"201": "出击获得B胜或以上1次",
	"202": "出击1次",
	"203": "1-1Boss战获得B胜或以上1次",
	"204": "1-2出击1次",
	"205": "1-2Boss战获得B胜或以上1次",
	"206": "出击1次，需要轻巡（旗舰）+驱逐3只",
	"207": "出击1次，需要重巡（旗舰）",
	"208": "出击1次，需要战舰（旗舰），航战不可",
	"209": "出击1次，需要空母1只+其它舰船3只",
	"210": "进行10次战斗",
	"211": "击沉空母3只",
	"212": "击沉补给舰5只",
	"213": "击沉补给舰20只",
	"214": "S胜利6次，BOSS战胜利12次，进行BOSS战24次，出击36次(一次出击多次战斗算一次)",
	"215": "出击1次，限第二舰队",
	"216": "出击1次",
	"217": "击沉空母1只",
	"218": "击沉补给舰3只",
	"219": "出击1次，需要鳥海+青葉+加古+古鷹+天龍+高速舰船1只",
	"220": "击沉空母20只",
	"221": "击沉补给舰50只",
	"222": "出击1次，需要暁+響+雷+電，其它舰船不可",
	"223": "2-2Boss战获得B胜或以上1次，需要愛宕+高雄+鳥海+摩耶",
	"224": "2-3Boss战获得B胜或以上1次，需要扶桑+山城+最上+時雨",
	"225": "3-1Boss战获得B胜或以上1次，需要翔鶴+瑞鶴",
	"226": "2-1 ~ 2-5Boss战获得B胜或以上5次",
	"227": "2-3Boss战获得B胜或以上1次，需要鳥海+青葉+衣笠+加古+古鷹+天龍",
	"228": "击沉潜水舰15只",
	"229": "4-1 ~ 4-5Boss战获得B胜或以上12次",
	"230": "击沉潜水舰6只",
	"231": "2-3Boss战获得B胜或以上1次，需要潜水艇/潜水空母2只",
	"232": "4-2Boss战获得B胜或以上1次，需要航战2只+航巡2只",
	"233": "2-3Boss战获得S胜1次，需要古鷹+加古+青葉+衣笠",
	"235": "1-2,1-3,2-1,2-2Boss战获得S胜1次，需要轻巡（旗舰）1只+驱逐/海防舰3只",
	"236": "2-3,2-4,5-1,5-3Boss战获得S胜1次，需要海風改二（旗舰）+山風/江風/涼風2只",
	"237": "2-1,2-2,2-3Boss战获得S胜1次，需要羽黒+神風+航巡/重巡1只+驱逐2只；或者2-1,2-2,2-3Boss战获得S胜1次，需要羽黒+神風+驱逐4只",
	"239": "2-3Boss战获得B胜或以上1次，需要朝潮+満潮+大潮+荒潮",
	"240": "3-1Boss战获得B胜或以上1次，需要霞+霰+陽炎+不知火",
	"241": "3-3 ~ 3-5Boss战获得B胜或以上5次",
	"242": "4-4Boss战获得B胜或以上1次",
	"243": "5-2Boss战获得S胜2次",
	"244": "3-2Boss战获得C败或以上1次，需要睦月+如月+弥生+望月",
	"245": "2-3Boss战获得S胜1次，需要Lv.90~99任意舰船（旗舰），限第一舰队",
	"246": "4-3Boss战获得S胜1次，需要Lv.100或以上任意舰船（旗舰），限第一舰队",
	"247": "4-4Boss战获得B胜或以上1次，需要航战2只",
	"248": "1-5Boss战获得C败或以上1次，需要睦月+弥生+卯月+望月，其它舰船不可",
	"249": "2-5Boss战获得S胜1次，需要妙高+那智+羽黒",
	"250": "5-2Boss战获得S胜1次，需要飛龍改二（旗舰）+蒼龍+驱逐2只",
	"251": "4-3Boss战获得S胜1次，需要蒼龍改二（旗舰）+飛龍改二+驱逐2只",
	"252": "5-1Boss战获得S胜1次，需要榛名改二",
	"253": "5-2Boss战获得S胜1次，需要雲龍改",
	"254": "2-1Boss战获得S胜1次，需要轻母1~2只+轻巡1只+驱逐3~4只，其它舰船不可",
	"255": "2-2Boss战获得S胜1次，需要轻巡（旗舰）1~2只+驱逐1只或以上，其它舰船不可",
	"256": "6-1Boss战获得S胜3次",
	"257": "1-4Boss战获得S胜1次，需要轻巡（旗舰）1~3只+驱逐1只或以上，其它舰船不可",
	"258": "4-2Boss战获得S胜2次，需要長門+陸奥+扶桑+山城",
	"259": "5-1Boss战获得S胜1次，需要大和级/長門级/伊勢级/扶桑级3只+轻巡1只",
	"260": "3-5Boss战获得S胜1次，需要战舰仅2只+轻母仅1只，空母不可",
	"261": "1-5Boss战获得A胜或以上3次",
	"262": "5-1Boss战获得S胜1次，需要扶桑+山城+最上+時雨+満潮",
	"263": "2-5Boss战获得S胜1次，需要古鷹+加古+青葉+衣笠",
	"264": "4-2Boss战获得S胜1次，需要空母2只+驱逐2只",
	"265": "1-5Boss战获得A胜或以上10次",
	"266": "2-5Boss战获得S胜1次，需要驱逐（旗舰）4只+重巡1只+轻巡1只",
	"267": "2-3Boss战获得B胜或以上1次，需要吹雪+白雪+初雪+叢雲",
	"268": "1-5Boss战获得C败或以上1次，需要吹雪+白雪+初雪+叢雲，其它舰船不可",
	"269": "3-1Boss战获得S胜1次，需要初春+子日+若葉+初霜",
	"270": "1-4Boss战获得S胜1次，需要皐月+文月+長月+驱逐1只",
	"271": "2-2Boss战获得S胜1次，需要那智（旗舰）+初霜+霞+潮+曙+任意舰船1只",
	"272": "2-3Boss战获得S胜1次，需要摩耶改/摩耶改二（旗舰）+轻巡1只+驱逐2只",
	"273": "5-1Boss战获得S胜1次，需要鳥海改二（旗舰）+天龍/古鷹/加古/青葉/夕張/衣笠任意5只",
	"274": "1-5Boss战获得C败或以上1次，需要暁+響+雷+電，其它舰船不可",
	"275": "2-3Boss战获得S胜1次，需要天龍+龍田",
	"276": "5-1Boss战获得S胜1次，需要比叡+霧島+長良+暁+雷+電",
	"277": "1-5Boss战获得B胜或以上1次，需要暁+響+雷+電，其它舰船不可",
	"278": "3-2Boss战获得B胜或以上1次，需要阿武隈（旗舰）+響+初霜+若葉+五月雨+島風",
	"279": "3-2Boss战获得S胜1次，需要阿武隈改二（旗舰）+響+夕雲+長波+秋雲+島風",
	"280": "1-2,1-3,1-4,2-1Boss战获得S胜1次，需要軽空母/轻巡1只+驱逐/海防舰3只或以上",
	"281": "2-2,3-5,4-5,5-1Boss战获得S胜1次，需要長門改二/陸奥改二（旗舰）+長門改二/陸奥改二（二号舰）+任意舰船4只",
	"282": "2-5,5-5,6-4Boss战获得S胜1次，需要長門改二/陸奥改二（旗舰）+長門改二/陸奥改二（二号舰）+任意舰船4只",
	"283": "4-5,5-2Boss战获得S胜1次，需要赤城改二/赤城改二戊（旗舰）+加賀/加賀改（二号舰）；以及6-5Boss战获得S胜2次，需要赤城改二/赤城改二戊（旗舰）+加賀/加賀改（二号舰）",
	"284": "1-4,2-1,2-2,2-3Boss战获得S胜1次，需要軽空母/轻巡1只+驱逐/海防舰3只或以上",
	"285": "3-5Boss战获得S胜1次，需要空母（旗舰）",
	"286": "1-5Boss战获得A胜或以上4次",
	"287": "5-2Boss战获得S胜1次，需要翔鶴+瑞鶴+朧+秋雲",
	"288": "3-1Boss战获得S胜1次，需要那智改二+足柄改二+多摩+木曾",
	"289": "2-2Boss战获得S胜1次，需要足柄（旗舰）+球磨+長良",
	"290": "5-3,5-4Boss战获得S胜1次，需要比叡（旗舰）",
	"291": "2-3,3-3,4-1Boss战获得S胜2次，需要大淀（旗舰）+明石/水上機母艦+任意舰船4只",
	"292": "5-1,5-3,5-4,5-5Boss战获得S胜2次，需要金剛改二丙（旗舰）+比叡/榛名/霧島任意1只+驱逐2只",
	"293": "1-4Boss战获得S胜1次，需要瑞鶴改（旗舰）+瑞鳳+千歳航(轻母)+千代田航(轻母)+任意舰船2只",
	"294": "2-4Boss战获得S胜1次，需要瑞鶴改（旗舰）+瑞鳳改+千歳航(轻母)+千代田航(轻母)+伊勢改+日向改",
	"295": "2-3Boss战获得S胜1次，需要名取（旗舰）+五十鈴+鬼怒+任意舰船3只",
	"296": "3-3Boss战获得S胜1次，需要空母2只+航巡/航战2只+驱逐2只",
	"297": "2-5Boss战获得S胜1次，需要霞（旗舰）+足柄+大淀+朝霜+清霜+任意舰船1只",
	"298": "2-1,2-2,2-3,2-4Boss战获得S胜1次，需要曙/潮/漣/朧任意2只",
	"299": "1-2,1-3,1-4,2-1,2-2Boss战获得S胜1次，需要轻巡（旗舰）+驱逐/海防舰2只",
	"301": "演习1次",
	"302": "演习胜利20次",
	"303": "演习3次",
	"304": "演习胜利5次",
	"306": "演习胜利2次，限一日内",
	"307": "演习胜利3次，限一日内",
	"308": "演习胜利4次，限一日内",
	"309": "演习胜利4次，限一日内",
	"311": "演习胜利7次，限一日内",
	"312": "演习胜利4次，限一日内",
	"315": "演习胜利8次，限一日内",
	"316": "演习胜利4次，限一日内",
	"317": "演习胜利3次，限一日内，需要夕雲级/陽炎级2只；之后2-2,2-3,2-4,2-5Boss战获得A胜或以上1次，需要夕雲级/陽炎级2只",
	"318": "演习胜利3次，限一日内，需要轻巡2只；之后秘书舰任意舰船在任意格搭载未上锁的戦闘糧食和秘书舰任意舰船在任意格搭载未上锁的戦闘糧食",
	"319": "演习胜利4次，限一日内，需要若葉改+初春改二+初霜改二",
	"320": "演习胜利4次，限一日内，需要驱逐4只+任意舰船2只",
	"322": "演习胜利2次，限一日内，需要海防舰（旗舰）+驱逐2只",
	"323": "演习胜利4次，限一日内，需要Lv.70或以上陽炎级/夕雲级4只",
	"324": "演习胜利3次，限一日内，需要伊勢改二（旗舰）+驱逐2只+任意舰船3只",
	"325": "演习胜利4次，限一日内，需要夕雲改二+長波改二+任意舰船4只",
	"326": "演习胜利8次，限一日内",
	"327": "演习胜利4次，限一日内，需要朝潮级4只",
	"328": "演习胜利4次，限一日内，需要磯風乙改+浜風乙改+浦風丁改+谷風丁改",
	"330": "演习胜利4次，限一日内，需要空母（旗舰）2只+驱逐2只",
	"331": "演习胜利3次，限一日内，需要空母（旗舰）2只+驱逐2只",
	"332": "演习胜利4次，限一日内，需要轻巡/練習巡洋艦/重雷装巡洋艦1只+驱逐/海防舰3只+任意舰船2只",
	"333": "演习胜利3次，限一日内，需要空母3只+驱逐2只",
	"334": "演习胜利6次，限一日内，需要空母3只+驱逐2只",
	"335": "演习胜利3次，限一日内，需要摩耶+羽黒",
	"336": "演习胜利4次，限一日内，需要補給艦/揚陸艦/海防舰2只或以上",
	"337": "演习胜利3次，限一日内，需要霞+霰+陽炎+不知火",
	"338": "演习胜利4次，限一日内，需要睦月级4只",
	"339": "演习胜利3次，限一日内，需要綾波+敷波+磯波+浦波",
	"401": "远征成功1次",
	"402": "远征成功3次",
	"403": "远征成功10次",
	"404": "远征成功30次",
	"405": "远征30成功1次",
	"406": "远征30成功1次",
	"408": "远征30成功2次",
	"409": "远征31成功1次",
	"410": "远征37/38成功1次",
	"411": "远征37/38成功7次",
	"412": "远征23成功1次",
	"413": "远征23成功3次",
	"414": "远征39成功1次",
	"415": "远征39成功2次",
	"416": "远征6成功3次",
	"417": "远征15成功1次",
	"418": "远征7成功2次",
	"419": "远征8成功1次",
	"420": "远征26成功1次，远征35成功1次",
	"422": "远征30成功1次，远征31成功1次",
	"423": "远征30成功1次，远征31成功1次，消耗钢材5000、铝土1500",
	"424": "远征5成功4次",
	"425": "远征4成功1次，远征5成功1次，远征9成功1次，需要轻巡/駆逐艦/海防舰，其它舰船不可",
	"426": "远征3成功1次，远征4成功1次，远征5成功1次，远征10成功1次",
	"427": "远征A1成功1次，消耗钢材800",
	"428": "远征4成功2次，远征A2成功2次，远征A3成功2次",
	"429": "远征3成功1次，远征A1成功1次，远征B1成功1次",
	"430": "远征A1成功1次，远征A2成功1次，远征5成功1次，远征9成功1次，需要海防舰+駆逐艦",
	"431": "远征A1成功1次，远征A2成功1次，远征B1成功1次，远征17成功1次",
	"432": "远征A2成功1次，远征B1成功1次，远征10成功1次",
	"433": "远征35成功1次，远征36成功1次，远征37成功1次，远征38成功1次，远征40成功1次",
	"434": "远征3/5/9/A1/A2成功1次，需要駆逐艦/海防舰，其它舰船不可",
	"501": "进行补给1次",
	"502": "入渠1次",
	"503": "入渠5次",
	"504": "进行补给15次",
	"601": "建造舰船1次",
	"602": "开发装备1次(失败也可)",
	"603": "解体舰船1次",
	"604": "废弃装备1次",
	"605": "开发装备1次(失败也可)",
	"606": "建造舰船1次",
	"607": "开发装备3次(失败也可)",
	"608": "建造舰船3次",
	"609": "解体舰船2次",
	"610": "废弃装备4次",
	"611": "废弃装备2次",
	"612": "废弃装备3次",
	"613": "废弃装备24次",
	"614": "秘书舰空母在任意格搭载未上锁的九七式艦攻(友永隊)，然后废弃天山2只",
	"615": "秘书舰空母在任意格搭载未上锁的九九式艦爆(江草隊)，然后废弃彗星2只",
	"616": "秘书舰空母在任意格搭载未上锁的零戦52型丙(六〇一空)，然后废弃試製烈風 後期型2只",
	"617": "废弃装备10次",
	"618": "装备改修1次(失败也可)",
	"619": "装备改修1次(失败也可)",
	"620": "秘书舰赤城改二/赤城改二戊在第一格搭载未上锁的、满熟练度的流星改(一航戦)，然后废弃流星改4只，彩雲1只，九七式艦攻2只，消耗弹药2800、铝土9000，同时消耗一个熟练搭乘员",
	"621": "秘书舰轻巡在第一格搭载未上锁的7.7mm機銃，然后废弃25mm単装機銃2只，ドラム缶(輸送用)2只，12cm30連装噴進砲1只，消耗開発資材30个，高速建造材10个，弹药1700",
	"622": "秘书舰翔鶴在任意格搭载未上锁的九七式艦攻(村田隊)，然后废弃天山2只",
	"623": "秘书舰设为赤城/翔鶴，然后废弃九七式艦攻3只",
	"624": "废弃装备7件，可一次性废弃",
	"625": "废弃装备9件，可一次性废弃",
	"626": "秘书舰鳳翔在任意格搭载未上锁的、满熟练度的零式艦戦21型，然后废弃零式艦戦21型2只，九六式艦戦1只，同时消耗一个熟练搭乘员",
	"627": "秘书舰空母在任意格搭载未上锁的零式艦戦21型(熟練)，然后废弃零式艦戦52型2只",
	"628": "秘书舰空母在任意格搭载未上锁的、满熟练度的零式艦戦21型(熟練)，然后废弃零式艦戦52型2只",
	"629": "秘书舰瑞鶴在任意格搭载未上锁的、满熟练度的零式艦戦52型(熟練)，然后废弃零戦52型丙(六〇一空)1只",
	"630": "秘书舰瑞鶴在任意格搭载未上锁的、满熟练度的零式艦戦21型(熟練)，然后废弃零式艦戦21型2只",
	"631": "秘书舰瑞鶴在任意格搭载未上锁的、满熟练度的零戦52型丙(付岩井小隊)，然后废弃零式艦戦62型(爆戦)2只",
	"632": "秘书舰瑞鶴在任意格搭载未上锁的、满熟练度的零戦21型(付岩本小隊)，然后废弃零式艦戦52型2只",
	"633": "秘书舰瑞鶴在任意格搭载未上锁的、满熟练度的零戦52型甲(付岩本小隊)，然后废弃彩雲2只",
	"634": "废弃装备9件，可一次性废弃",
	"635": "废弃装备5件，可一次性废弃",
	"636": "废弃7.7mm機銃2只，12.7mm単装機銃2只",
	"637": "秘书舰鳳翔在任意格搭载未上锁的、满熟练度的、改修Max的九六式艦戦，然后消耗勲章2个",
	"638": "废弃対空機銃6只",
	"639": "秘书舰島風在任意格搭载未上锁的、改修Max的61cm五連装(酸素)魚雷和秘书舰島風在任意格搭载未上锁的、改修Max的61cm三連装(酸素)魚雷，然后消耗勲章2个",
	"641": "废弃ドラム缶(輸送用)2只，准备7.7mm機銃2只，九六式艦戦2只",
	"642": "准备7.7mm機銃2只，九九式艦爆2只",
	"643": "废弃零式艦戦21型2只，准备九六式陸攻1只，九七式艦攻2只",
	"644": "准备一式陸攻1只，天山2只",
	"645": "废弃三式弾1只，准备ドラム缶(輸送用)2只，九一式徹甲弾1只，消耗燃料750、弹药750",
	"646": "废弃25mm単装機銃1只，准备25mm連装機銃2只，25mm三連装機銃2只，消耗家具コイン5000个",
	"647": "废弃ドラム缶(輸送用)2只，消耗燃料1200、铝土3000設営隊1个",
	"648": "废弃12.7cm連装高角砲2只，准备14cm単装砲2只，15.2cm単装砲2只，消耗家具コイン5000个",
	"649": "废弃零式水上偵察機2只，准备一式陸攻1只，彩雲2只",
	"650": "废弃紫電改二3只，消耗新型航空機設計図2个，ネ式エンジン1个",
	"651": "废弃零式艦戦52型3只，准备流星2只，試製烈風 後期型2只，消耗钢材8000",
	"652": "废弃12.7cm連装砲2只，准备7.7mm機銃2只，九六式艦戦2只，消耗家具コイン5000个",
	"653": "废弃14cm単装砲6只，准备35.6cm連装砲3只，九六式艦戦3只，消耗家具コイン6000个",
	"656": "秘书舰伊401/伊14/伊13在第一格搭载未上锁的試製晴嵐和秘书舰伊401/伊14/伊13在第二格搭载未上锁的瑞雲(六三一空)",
	"658": "废弃61cm三連装魚雷4只，准备61cm四連装(酸素)魚雷3只，九三式水中聴音機3只，消耗開発資材120个",
	"659": "秘书舰任意舰船在第一格搭载未上锁的、满熟练度的、改修Max的二式水戦改，然后废弃零式艦戦21型2只，瑞雲2只，同时消耗一个熟练搭乘员",
	"660": "秘书舰任意舰船在第一格搭载未上锁的、满熟练度的、改修Max的二式水戦改，然后废弃零式艦戦21型2只，瑞雲2只，同时消耗一个熟练搭乘员",
	"661": "废弃副砲10只，消耗钢材6000",
	"662": "废弃中口径主砲10只，消耗钢材12000",
	"663": "废弃大口径主砲10只，消耗钢材18000",
	"664": "废弃电探10只，消耗弹药8000、钢材8000",
	"665": "废弃小口径主砲16只，消耗燃料12000",
	"666": "秘书舰日向改在第四格搭载未上锁的、改修Max的瑞雲(六三四空)，然后废弃ドラム缶(輸送用)2只，消耗九九式艦爆2个，瑞雲2个，同时消耗一个熟练搭乘员",
	"667": "废弃対空機銃10只，消耗钢材15000",
	"668": "准备戦闘糧食2只，消耗燃料800、铝土150",
	"669": "秘书舰任意舰船在第一格搭载未上锁的、满熟练度的、改修Max的F6F-3，然后废弃13号対空電探2只，22号対水上電探2只，消耗開発資材30个，改修資材6个，新型航空兵装資材1个，铝土5000",
	"670": "秘书舰任意舰船在第一格搭载未上锁的、满熟练度的、改修Max的F6F-5，然后废弃13号対空電探2只，22号対水上電探2只，消耗開発資材40个，改修資材8个，新型航空兵装資材1个，铝土6000",
	"671": "秘书舰任意舰船在第一格搭载未上锁的TBF，然后废弃13号対空電探2只，22号対水上電探2只，消耗開発資材40个，改修資材10个，新型航空兵装資材1个，弹药5000、铝土8000，同时消耗一个熟练搭乘员",
	"672": "秘书舰任意舰船在第一格搭载未上锁的艦隊司令部施設，然后废弃电探3只，開発資材10只，消耗戦闘詳報2个，钢材2000",
	"673": "废弃小口径主砲4只",
	"674": "废弃対空機銃3只，消耗钢材300",
	"675": "废弃艦上戦闘機6只，対空機銃4只，消耗铝土800",
	"676": "废弃中口径主砲3只，副砲3只，ドラム缶(輸送用)1只，消耗钢材2400",
	"677": "废弃大口径主砲4只，水上偵察機2只，魚雷3只，消耗钢材3600",
	"678": "秘书舰任意舰船在第一格搭载未上锁的零式艦戦52型和秘书舰任意舰船在第二格搭载未上锁的零式艦戦52型，然后废弃九六式艦戦3只，零式艦戦21型5只；以及消耗铝土4000",
	"679": "废弃中口径主砲6只，副砲3只，消耗铝土900",
	"680": "废弃対空機銃4只，电探4只，消耗铝土1500",
	"682": "废弃中口径主砲4只，大口径主砲4只，消耗燃料500",
	"683": "秘书舰伊勢改二在第一格搭载未上锁的、改修Max的試製41cm三連装砲，然后废弃41cm連装砲3只，22号対水上電探2只，消耗開発資材40个，高速建造材50个，新型砲熕兵装資材2个，钢材4500",
	"684": "秘书舰伊勢改二在第三格搭载未上锁的彗星二二型(六三四空)，然后废弃九九式艦爆3只，彗星3只，消耗開発資材30个，新型航空兵装資材1个，铝土3000，同时消耗一个熟练搭乘员",
	"685": "秘书舰吹雪/白雪/初雪/深雪/叢雲/磯波/浦波在第一格搭载未上锁的、改修Max的12.7cm連装砲A型改二，然后废弃10cm連装高角砲4只，94式高射装置1只，消耗開発資材30个，新型砲熕兵装資材1个，钢材900",
	"686": "秘书舰吹雪/白雪/初雪/深雪/叢雲/磯波/浦波在第一格搭载未上锁的、改修Max的12.7cm連装砲A型改二，然后废弃10cm連装高角砲4只，94式高射装置1只，消耗開発資材30个，新型砲熕兵装資材1个，钢材900",
	"687": "秘书舰夕立改二/時雨改二在第一格搭载未上锁的、改修Max的12.7cm連装砲B型改二，然后废弃10cm連装高角砲5只，94式高射装置1只，消耗開発資材50个，新型砲熕兵装資材1个，钢材1200",
	"688": "废弃艦上戦闘機3只，艦上爆撃機3只，艦上攻撃機3只，水上偵察機3只，准备熟練搭乗員1只，消耗铝土1800",
	"689": "废弃艦上戦闘機4只，水上偵察機4只，艦上偵察機2只，准备熟練搭乗員1只，新型航空兵装資材1只，消耗铝土3000",
	"690": "废弃艦上戦闘機4只，艦上爆撃機4只，艦上攻撃機4只，准备熟練搭乗員1只，新型航空兵装資材2只，消耗铝土4800",
	"691": "废弃中口径主砲4只，副砲4只，対空機銃4只，消耗铝土1600",
	"692": "废弃小口径主砲5只，大口径主砲5只，水上偵察機5只，消耗钢材3000",
	"693": "废弃水上偵察機4只，艦上戦闘機3只，艦上攻撃機2只，開発資材20只，消耗铝土3000",
	"694": "废弃瑞雲4只，彗星4只，流星2只，開発資材60只，消耗钢材8500、铝土4000",
	"695": "秘书舰伊勢改二/日向改二在第一格搭载未上锁的彗星一二型甲，然后废弃彗星4只，九九式艦爆3只，瑞雲2只，新型航空兵装資材1只，消耗弹药2500、铝土5000",
	"696": "秘书舰伊勢改二/日向改二在第一格搭载未上锁的、改修Max的瑞雲改二(六三四空)，然后废弃瑞雲6只，彗星3只，試製烈風 後期型1只，消耗新型航空兵装資材1个，弹药2000、铝土8000，同时消耗一个熟练搭乘员",
	"701": "近代化改造成功1次",
	"702": "近代化改造成功2次",
	"703": "近代化改造成功15次",
	"704": "近代化改造成功4次",
	"705": "准备钢材5500、铝土2500，对空母近代化改造成功2次，每次消耗轻母/空母5艘",
	"805": "3-1Boss战获得B胜或以上1次，需要霞改二（旗舰）+驱逐3只+任意舰船2只",
	"806": "2-5Boss战获得S胜1次，需要霞改二（旗舰）+驱逐2只+任意舰船3只",
	"807": "1-6出击完成全图1次，需要五十鈴改二（旗舰）+皐月改二+卯月改+任意舰船3只",
	"808": "2-3Boss战获得S胜1次，需要白露改（旗舰）+時雨+春雨+五月雨+任意舰船2只",
	"809": "6-3Boss战获得B胜或以上1次",
	"810": "1-3Boss战获得S胜3次，需要轻巡1只+驱逐，其它舰船不可",
	"811": "1-4Boss战获得S胜5次",
	"812": "2-3Boss战获得S胜6次，需要大潮（旗舰）+任意舰船5只",
	"813": "3-5Boss战获得S胜1次，需要大潮改二（旗舰）+任意舰船5只",
	"814": "4-1Boss战获得A胜或以上1次，需要川内改二（旗舰）+江風改二+時雨改二+驱逐2只+任意舰船1只",
	"815": "4-5Boss战获得S胜1次，需要赤城（旗舰）+加賀+任意舰船4只",
	"816": "2-2Boss战获得S胜1次；以及2-3Boss战获得S胜1次",
	"817": "1-4Boss战获得A胜或以上1次，需要轻巡（旗舰）+驱逐4只+任意舰船1只",
	"818": "1-6出击完成全图1次，需要轻巡（旗舰）+驱逐4只+任意舰船1只",
	"819": "1-6出击完成全图2次，需要五十鈴改二（旗舰）+皐月改二+卯月改+任意舰船3只",
	"820": "1-6出击完成全图1次，需要朝潮改二（旗舰）+大潮+満潮+荒潮+任意舰船2只",
	"821": "1-5Boss战获得S胜2次，需要朝潮改二丁+大潮改二",
	"822": "2-4Boss战获得S胜2次",
	"823": "1-4Boss战获得A胜或以上2次，需要轻巡（旗舰）+驱逐4只+任意舰船1只",
	"824": "1-3Boss战获得S胜1次，需要轻母（旗舰）+驱逐3只+任意舰船2只",
	"825": "2-2Boss战获得S胜1次，需要轻巡（旗舰）+驱逐4只+任意舰船1只；以及2-3Boss战获得S胜1次，需要轻巡（旗舰）+驱逐4只+任意舰船1只",
	"826": "1-5Boss战获得A胜或以上1次，需要磯波+浦波+綾波+敷波",
	"827": "2-5Boss战获得A胜或以上1次，需要磯波+浦波+綾波+敷波+任意舰船2只",
	"828": "6-3Boss战获得S胜1次",
	"829": "5-3Boss战获得A胜或以上1次",
	"830": "2-1Boss战获得S胜1次",
	"833": "4-5,6-4Boss战获得A胜或以上2次，需要水上機母艦/揚陸艦1只或以上",
	"834": "1-4Boss战获得S胜1次，需要航巡/水母（旗舰）",
	"835": "2-4Boss战获得A胜或以上1次，需要鬼怒+青葉+北上+大井+任意舰船2只",
	"836": "2-5Boss战获得S胜1次，需要鬼怒改二（旗舰）+北上改二/大井改二/球磨改/青葉改/浦波改/敷波改任意5只",
	"837": "2-2Boss战获得S胜1次，需要鬼怒改二（旗舰）+浦波改+驱逐3只+任意舰船1只",
	"838": "2-3Boss战获得S胜1次，需要重巡/航巡（旗舰）+重巡/航巡3只+任意舰船2只",
	"839": "3-3Boss战获得S胜1次，需要战舰/航战（旗舰）+战舰/航战1只+任意舰船4只",
	"842": "2-4Boss战获得S胜1次，需要低速战舰/航战2只+任意舰船4只",
	"844": "5-5Boss战获得A胜或以上2次，需要荒潮改二（旗舰）+朝潮/大潮/満潮任意1只",
	"845": "4-1,4-2,4-3,4-4,4-5Boss战获得S胜1次",
	"846": "6-1Boss战获得B胜或以上1次，需要潜水艇/潜水空母（旗舰）+潜水艇/潜水空母3只",
	"848": "5-3Boss战获得A胜或以上1次，需要Zara due（旗舰）",
	"849": "1-4Boss战获得A胜或以上1次，需要轻巡（旗舰）；以及2-2Boss战获得A胜或以上1次，需要轻巡（旗舰）；以及2-3Boss战获得A胜或以上1次，需要轻巡（旗舰）",
	"850": "3-5Boss战获得S胜1次，需要空母/水母（旗舰）；以及4-4Boss战获得S胜1次，需要空母/水母（旗舰）；以及6-2Boss战获得S胜1次，需要空母/水母（旗舰）",
	"851": "5-1Boss战获得A胜或以上1次，需要鈴谷改二（旗舰）；以及5-3Boss战获得A胜或以上1次，需要鈴谷改二（旗舰）",
	"852": "6-2Boss战获得S胜1次，需要鈴谷航改二（旗舰）；以及6-5Boss战获得S胜1次，需要鈴谷航改二（旗舰）",
	"853": "1-2,1-3,1-4,1-5Boss战获得A胜或以上1次，需要軽巡洋艦/練習巡洋艦/重雷装巡洋艦/航空巡洋艦/重巡洋艦（旗舰）+驱逐2只+任意舰船",
	"854": "2-4Boss战获得A胜或以上1次；以及6-1Boss战获得A胜或以上1次；以及6-3Boss战获得A胜或以上1次；以及6-4Boss战获得S胜1次",
	"855": "1-3Boss战获得S胜1次，需要驱逐/海防舰3只；以及1-4Boss战获得S胜1次，需要驱逐/海防舰3只；以及1-5Boss战获得S胜1次，需要驱逐/海防舰3只；以及1-6Boss战完成全图1次，需要驱逐/海防舰3只",
	"856": "4-5,5-5Boss战获得S胜1次，需要長門改二（旗舰）+陸奥改（二号舰）",
	"857": "2-2Boss战获得A胜或以上1次，需要轻巡1只+驱逐/海防舰2只+航巡/轻母1只；以及2-3Boss战获得A胜或以上1次，需要轻巡1只+驱逐/海防舰2只+航巡/轻母1只；以及2-4Boss战获得A胜或以上1次，需要轻巡1只+驱逐/海防舰2只+航巡/轻母1只；以及2-5Boss战获得A胜或以上1次，需要轻巡1只+驱逐/海防舰2只+航巡/轻母1只",
	"858": "4-5,6-2Boss战获得S胜1次，需要熊野改二（旗舰）+鈴谷改二（二号舰）+最上改+三隈改+任意舰船2只",
	"859": "2-5,3-5Boss战获得A胜或以上1次，需要Lv.50或以上伊勢改/日向改（旗舰）+Lv.50或以上伊勢改/日向改（二号舰）+轻巡1只+驱逐2只",
	"860": "2-3Boss战获得S胜1次，需要由良改二（旗舰）+村雨/夕立/春雨/五月雨/秋月任意2只；以及5-1Boss战获得S胜1次，需要由良改二（旗舰）+村雨/夕立/春雨/五月雨/秋月任意2只",
	"861": "1-6出击完成全图2次，需要航空戦艦/補給艦2只",
	"862": "6-3Boss战获得A胜或以上2次，需要水上機母艦1只+軽巡洋艦2只",
	"863": "3-2Boss战获得S胜1次，需要文月改二+皐月改二+水無月改+長月改",
	"864": "5-5,6-2Boss战获得S胜1次，需要Saratoga Mk.II/Saratoga Mk.II Mod.2（旗舰）+軽巡洋艦1只+駆逐艦2只",
	"865": "6-5Boss战获得S胜1次，需要Saratoga Mk.II（旗舰）",
	"869": "1-3,1-4,1-5Boss战获得A胜或以上1次，需要轻巡（旗舰）+驱逐/海防舰2只",
	"870": "1-2Boss战获得S胜1次，需要朝潮+満潮+大潮+荒潮；以及2-2Boss战获得S胜1次，需要朝潮+満潮+大潮+荒潮",
	"871": "3-2Boss战获得S胜1次，需要朝潮改二/朝潮改二丁+満潮改二+大潮改二+荒潮改二；以及5-4Boss战获得S胜1次，需要朝潮改二/朝潮改二丁+満潮改二+大潮改二+荒潮改二",
	"872": "7-2-P2,5-5,6-2,6-5Boss战获得S胜1次",
	"873": "3-1,3-2,3-3Boss战获得A胜或以上1次，需要軽巡洋艦1只+任意舰船5只",
	"874": "3-5Boss战获得S胜2次，需要軽空母1只+水上機母艦1只+轻巡1只",
	"875": "5-4Boss战获得S胜2次，需要長波改二+高波改/沖波改/朝霜改任意1只",
	"876": "1-4Boss战获得A胜或以上2次，需要龍田改/龍田改二（旗舰）+駆逐艦/海防舰3只+任意舰船2只；以及1-6出击完成全图2次，需要龍田改/龍田改二（旗舰）+駆逐艦/海防舰3只+任意舰船2只",
	"877": "5-1,5-3,5-4Boss战获得A胜或以上1次，需要村雨改二（旗舰）+由良改二/夕立改二/春雨改/五月雨改/秋月改任意3只+任意舰船2只",
	"878": "1-4Boss战获得S胜3次，需要轻巡/驱逐（旗舰）+驱逐/海防舰3只或以上；以及1-6出击完成全图3次，需要轻巡/驱逐（旗舰）+驱逐/海防舰3只或以上",
	"879": "1-6出击完成全图1次，需要伊勢改+日向改+大淀改+驱逐1只或以上；以及2-5,3-5,4-5Boss战获得A胜或以上1次，需要伊勢改+日向改+大淀改+驱逐1只或以上",
	"880": "1-6出击完成全图1次，需要驱逐4只+任意舰船2只；以及2-3,3-2,4-2Boss战获得A胜或以上1次，需要驱逐4只+任意舰船2只",
	"881": "3-2Boss战获得S胜2次，需要霰改二1只+霞改二/霞改二乙1只+陽炎改1只+不知火改1只",
	"884": "3-2,4-2,5-3Boss战获得S胜2次，需要陽炎改二/不知火改二/黒潮改二（旗舰）+Lv.75或以上陽炎级/夕雲级2只",
	"885": "3-5,4-5,6-4Boss战获得S胜1次，需要伊勢改二（旗舰）",
	"886": "6-5Boss战获得S胜3次，需要伊勢改二（旗舰）+駆逐艦2只",
	"887": "1-2,1-4,1-5Boss战获得S胜1次，需要天龍+龍田+駆逐艦2只；以及1-6出击完成全图1次，需要天龍+龍田+駆逐艦2只",
	"888": "5-1,5-3,5-4Boss战获得S胜1次，需要鳥海/青葉/衣笠/加古/古鷹/天龍/夕張4只",
	"889": "2-3,4-1,5-5,6-5Boss战获得S胜1次，需要白露改二+時雨改二",
	"890": "1-4,2-3,3-3,4-5Boss战获得S胜1次，需要鳥海改二+摩耶改二+任意舰船4只",
	"891": "1-5,3-2,7-1,5-1Boss战获得A胜或以上1次，需要磯風乙改+浜風乙改+浦風丁改+谷風丁改",
	"892": "5-3,5-4,5-5Boss战获得S胜1次，需要夕雲改二+巻雲改二+任意舰船4只",
	"893": "1-5,7-1,7-2-P1,7-2-P2Boss战获得S胜3次",
	"894": "1-3,1-4,2-1,2-2,2-3Boss战获得S胜1次，需要軽空母/正規空母/装甲空母+任意舰船5只",
	"895": "3-1,3-3,3-4,3-5Boss战获得S胜2次，需要軽巡洋艦/重雷装巡洋艦/練習巡洋艦（旗舰）+任意舰船5只",
	"896": "1-4,1-5,2-3,7-2-P2Boss战获得S胜1次，需要航空戦艦2只",
	"897": "1-6出击完成全图2次，需要日向改二+伊勢改二；以及4-5,5-5,6-5Boss战获得S胜1次，需要日向改二+伊勢改二",
	"901": "2-5,3-3,5-3,6-3Boss战获得S胜1次，需要夕張改二/夕張改二特/夕張改二丁（旗舰）+任意舰船5只",
	"902": "1-5,2-2,3-2,7-1Boss战获得S胜1次，需要夕張改二/夕張改二特/夕張改二丁（旗舰）+睦月/如月/弥生/卯月/菊月/望月任意3只+任意舰船2只；以及1-6Boss战完成全图1次，需要夕張改二/夕張改二特/夕張改二丁（旗舰）+睦月/如月/弥生/卯月/菊月/望月任意3只+任意舰船2只",
	"903": "5-1,5-4,6-4,6-5Boss战获得S胜1次，需要夕張改二/夕張改二特/夕張改二丁（旗舰）+睦月/如月/弥生/卯月/菊月/望月任意2只+任意舰船3只；或者5-1,5-4,6-4,6-5Boss战获得S胜1次，需要夕張改二/夕張改二特/夕張改二丁（旗舰）+由良改二+任意舰船4只",
	"904": "2-5,3-4,4-5,5-3Boss战获得S胜1次，需要綾波改二+敷波改二",
	"905": "1-6出击完成全图1次，需要海防舰3只+任意舰船2只，其它舰船不可；以及1-1,1-2,1-3,1-5Boss战获得S胜1次，需要海防舰3只+任意舰船2只，其它舰船不可",
	"911": "1-3,1-4,1-5,2-2,2-3Boss战获得S胜1次，需要沖波改二+長波+岸波+朝霜+任意舰船2只",
	"914": "4-1,4-2,4-3,4-4Boss战获得A胜或以上1次，需要重巡3只+驱逐1只+任意舰船2只",
	"916": "5-1,5-2,5-3,5-4,5-5Boss战获得S胜1次，需要比叡改二丙+金剛/榛名/霧島任意1只+轻巡1只+驱逐1只或以上"
};
const paint = ['white', 'green', 'FireBrick', 'OliveDrab', 'DarkTurquoise', 'Khaki', 'Sienna', 'Violet', 'red', 'Yellow']
const categories = [{
	name: "0"
}, {
	name: "编成",
	symbol: `path://M0.0 200 L 0.0 400 200 400 L 400 400 400 200 L 400 0.0 200 0.0 L 0.0 0.0 0.0 200 M211 63 C 215 67,217 74,218 83 C 218 86,218 90,219 92 C 219 93,219 96,219 98 C 219 105,220 110,222 112 L 223 114 225 112 C 228 109,231 109,235 113 C 237 115,239 116,243 117 C 244 117,248 118,250 119 C 255 121,259 122,263 122 C 265 122,266 123,267 124 C 272 127,291 129,300 127 C 304 126,323 126,324 126 C 327 128,327 133,323 136 C 322 138,320 139,320 141 C 319 142,318 143,318 144 C 317 145,316 148,315 152 C 315 155,314 158,313 158 C 313 158,312 159,311 161 C 310 162,308 163,307 164 C 306 165,305 166,305 166 C 303 169,269 169,130 169 L 87 169 85 168 C 84 167,83 166,83 165 C 81 162,80 158,80 158 C 80 156,77 148,76 144 C 75 142,73 139,73 137 L 71 134 71 123 C 71 113,71 113,72 111 C 77 104,80 108,79 119 C 79 129,80 131,83 128 C 84 127,86 126,86 125 C 87 124,89 123,90 122 L 91 121 97 121 C 103 121,104 121,106 123 C 110 126,113 126,116 124 C 118 121,119 121,127 121 C 132 121,135 121,137 121 C 138 120,140 120,142 120 C 146 120,149 118,151 113 C 153 109,154 108,158 108 C 161 108,162 107,162 100 C 162 96,163 94,166 94 C 171 92,170 86,164 80 C 160 75,161 70,167 69 C 170 68,172 67,174 66 C 177 63,178 65,178 73 C 179 81,180 83,184 81 C 188 79,190 81,192 92 C 193 99,194 100,195 102 C 197 104,197 103,199 100 C 202 95,202 94,202 79 C 201 62,201 63,206 61 C 208 60,208 60,211 63`
}, {
	name: "出击",
	symbol: `path://M6.0 0.6 C 6.0 0.9,4.9 2.2,3.6 3.6 C 2.2 4.9,0.9 6.0,0.6 6.0 C 0.0 6.0,0.0 27,0.0 200 C 0.0 354,0.1 394,0.5 394 C 1.1 394,6.0 398,6.0 399 C 6.0 399,55 400,200 400 C 342 400,394 399,394 399 C 394 399,399 394,399 394 C 399 394,400 318,400 200 C 400 55,399 6.0,399 6.0 C 398 6.0,394 1.1,394 0.5 C 394 0.1,354 0.0,200 0.0 C 27 0.0,6.0 0.0,6.0 0.6 M284 62 C 288 67,290 73,287 76 C 284 81,286 82,292 81 C 295 80,297 81,295 83 C 291 86,291 86,291 87 C 291 88,292 88,294 89 C 301 91,303 92,302 94 C 301 97,289 98,277 96 C 268 95,268 95,267 99 C 266 100,266 101,265 102 C 264 102,263 104,261 105 C 260 106,258 107,257 108 C 255 109,240 119,236 122 C 233 124,228 130,227 132 L 226 134 227 136 C 229 141,239 148,254 155 C 256 156,261 158,264 160 C 272 163,273 164,283 169 C 292 173,314 184,319 187 C 324 189,325 190,330 193 C 331 194,332 194,333 195 C 334 196,334 197,333 199 C 332 199,331 199,325 199 C 312 200,304 198,273 192 C 267 190,237 183,232 181 C 212 176,214 176,209 182 C 202 192,200 193,195 188 C 191 184,191 182,194 178 C 198 174,198 172,193 171 C 187 169,182 167,178 166 C 175 166,172 165,171 164 C 167 163,166 163,164 165 C 162 167,161 167,158 166 L 156 166 153 167 C 148 171,144 172,140 171 C 136 171,135 172,135 174 C 136 179,136 179,135 180 L 134 181 133 180 C 132 179,132 176,132 173 C 131 170,131 169,128 166 C 123 161,122 158,120 152 C 119 146,116 144,113 147 C 110 148,107 148,105 144 C 102 141,103 140,106 136 C 113 130,112 129,103 122 C 91 114,89 113,86 111 C 84 109,82 108,81 107 C 75 102,68 94,68 92 C 68 88,72 88,86 92 C 95 94,98 95,108 98 C 114 99,120 101,122 102 C 123 102,126 103,128 104 C 129 104,134 106,140 108 C 145 109,151 111,153 112 C 159 115,161 114,168 108 C 178 99,183 98,187 104 C 190 109,193 107,198 98 C 201 91,204 89,208 91 C 209 91,208 91,233 89 C 243 87,243 87,242 84 C 240 80,241 80,251 80 C 259 80,259 80,262 76 C 267 70,275 62,278 61 C 280 60,282 60,284 62 M206 85 C 206 85,205 84,206 83 L 206 83 206 83 C 206 84,206 84,206 85`
}, {
	name: "演习",
	symbol: `path://m0,202l0,202l197,0l197,0l0.5,-1.2c0.3,-0.8 1,-1.4 2,-1.9l1.5,-0.6l0,-198l0,-198l-0.8,0c-0.9,0 -3.1,-2 -3.1,-2.9c0,-0.5 -17,-0.6 -198,-0.6l-198,0l0,202m186,-170c1.2,0.4 1.8,2.3 1.8,6.2c0,12 9,20 23,21c4.3,0.2 6.6,0.5 8.4,1.1c1.3,0.4 4.4,1.2 7,1.8c2.6,0.5 5.6,1.4 7,2.1c4.6,2.3 9.5,5.3 11,6.8c4,3.7 8,6.2 11,7.5c6,1.9 10,5 13,9.5c0.9,1.4 2.7,4.2 4,6.1c3.2,4.9 4.7,8.8 5.4,14c0.3,2.9 3,11 4.8,14c1.4,2.9 5,6 8.5,7.4c4.7,1.9 5.5,4.4 1.8,5.9c-0.8,0.3 -2.2,0.9 -3.1,1.3c-3.4,1.4 -6,5.3 -7.9,11c-0.9,3.3 -3.2,9.2 -5.9,15c-1.7,3.6 -10,13 -16,17c-1.3,0.9 -3.6,2.6 -4.9,3.7c-5.5,4.3 -11,6.7 -19,7.8c-15,2 -14,1.7 -19,4.4c-5.5,2.9 -6,2.9 -11,-0c-2.1,-1.1 -4.5,-2.2 -5.6,-2.4c-6.8,-1.1 -11,-2.2 -18,-4.5c-9.4,-2.8 -11,-2.5 -14,2.6c-3.4,5.7 -12,5.5 -27,-0.7c-3.7,-1.5 -6.7,-2.4 -8.9,-2.8c-11,-1.9 -19,-9.5 -24,-23c-1.6,-4.5 -2.9,-6.5 -5.4,-8.8c-5.2,-4.5 -5.1,-10 0.3,-17c8.2,-11 9.1,-15 3.6,-18c-3.6,-1.8 -3.4,-3.3 0.6,-5.7c4.3,-2.5 7.9,-5.5 11,-9.8c2,-2.3 5.6,-6.3 7.8,-8.8c2.2,-2.5 4.8,-5.8 5.7,-7.4c1.8,-3.2 9.8,-11 15,-16c4,-3.4 12,-8 19,-10c5.9,-1.9 6.4,-2.6 4.9,-7.6c-1.3,-4.2 -1.1,-6.3 0.9,-10c1.6,-3.4 7.1,-10 8.9,-11c2.6,-1.6 3.3,-1.8 4.5,-1.3z`
}, {
	name: "远征",
	symbol: `path://m5.6,260c-3.6,-3.6 -3.6,-6.0 -3.6,-128c0,-122 0,-124 3.6,-128c3.6,-3.6 6.0,-3.6 128,-3.6c122,0 124,0 128,3.6c3.6,3.6 3.6,6.0 3.6,128c0,122 0,124 -3.6,128c-3.6,3.6 -6.0,3.6 -128,3.6c-122,0 -124,0 -128,-3.6zm124,-237c-2.1,0 -4.2,0.1 -6.3,0.3l-0.1,-0.7c-0.0,-0.4 -0.2,-0.8 -0.4,-1.2c1.6,-1.3 2.6,-3.3 2.6,-5.5c0,-3.9 -3.1,-7.1 -7.1,-7.1s-7.1,3.1 -7.1,7.1c0,3.1 2.0,5.8 4.9,6.7c-0.0,0.4 -0.0,0.9 0,1.3l0.1,0.7c-22,5.9 -39,26 -39,51c0,29 23,52 52,52c29,0 52,-23 52,-52c0.0,-29 -23,-52 -52,-52l0,0.0zm0.9,12c18,0 34,13 38,30l-2.4,0.9c-0.6,-2.8 -3.2,-5.0 -6.2,-5.0c-3.5,0 -6.4,2.8 -6.4,6.4c0,0.3 0.0,0.6 0.0,0.9l-11,-0.1c-0.2,-0.4 -0.4,-0.9 -0.7,-1.4l14,-21l0.2,-0.3l-20,17c-1.4,-0.6 -3.1,-1.0 -4.8,-1.0l0.3,-0.0l-5.0,-10c2.7,-0.7 4.7,-3.2 4.7,-6.1c0,-3.5 -2.8,-6.4 -6.4,-6.4c-0.3,0 -0.6,0.0 -0.9,0.0l0.2,-2.6c2.0,-0.3 4.2,-0.5 6.3,-0.5zm-17,-19c0,-3.0 2.5,-5.6 5.6,-5.6c3.0,0 5.6,2.5 5.6,5.6c0,1.8 -0.8,3.4 -2.1,4.4c-0.7,-0.5 -1.7,-0.7 -2.7,-0.5c-0.9,0.1 -1.7,0.7 -2.2,1.4c-2.3,-0.6 -3.9,-2.8 -3.9,-5.3zm-21,59c0,-18 13,-34 30,-38l1.2,2.4c-2.5,0.8 -4.4,3.2 -4.4,6.1c0,3.5 2.8,6.4 6.4,6.4c0.2,0 0.5,-0.0 0.8,-0.0l-0.2,12l0.2,-0.0c-1.8,0.8 -3.5,2.1 -4.7,3.8l0.3,-0.6l-6.6,-2.5l4.9,5.2l0.1,-0.1c-0.8,1.5 -1.3,3.3 -1.3,5.2l-0.0,-0.0l-11,5.1c-0.8,-2.5 -3.2,-4.4 -6.1,-4.4c-3.5,0 -6.4,2.8 -6.4,6.4c0,0.2 0.0,0.5 0.0,0.8l-3.3,-0.3c-0.3,-2.1 -0.5,-4.4 -0.5,-6.7l0,0.0zm39,39c-18,0 -34,-13 -38,-30l2.9,-1.4c0.6,2.9 3.1,5.0 6.2,5.0c3.5,0 6.4,-2.8 6.4,-6.4c0,-0.4 -0.0,-0.8 -0.1,-1.3l12,0.1c0.1,0.4 0.4,0.7 0.6,1.1l-14,22l0.9,-0.8l19,-16c1.4,0.6 2.9,1.0 4.6,1.1l-0.0,0.0l5.2,11c-2.7,0.7 -4.8,3.2 -4.8,6.2c0,3.5 2.8,6.4 6.4,6.4c0.3,0 0.6,-0.0 0.9,-0.0l0.0,2.9c-2.4,0.4 -4.9,0.7 -7.5,0.7l-0.0,0zm9.7,-1.2l-1.6,-2.5c2.8,-0.6 4.8,-3.2 4.8,-6.2c0,-3.5 -2.8,-6.4 -6.4,-6.4c-0.2,0 -0.5,0.0 -0.8,0.0l0,-12l-0.1,0.0c1.7,-0.7 3.2,-1.9 4.4,-3.3l6.4,2.8l-4.6,-5.5c0.6,-1.4 1.0,-2.9 1.1,-4.6l10,-4.9c0.8,2.6 3.2,4.5 6.1,4.5c3.5,0 6.4,-2.8 6.4,-6.4c0,-0.2 -0.0,-0.5 -0.0,-0.8l2.7,0.5c0.3,2.1 0.5,4.4 0.5,6.7c0.0,18 -12,34 -29,38z`
}, {
	name: "补给/入渠",
	symbol: `path://m4.8,0.5c0,0.6 -3.7,4.2 -4.3,4.2c-0.2,0 -0.4,59 -0.4,194l0,194l2.6,2.6l2.6,2.6l194,0l194,0l2.6,-2.6l2.6,-2.6l0,-194l0,-194l-2.6,-2.6l-2.6,-2.6l-194,0c-164,0 -194,0 -194,0.5m146,30c11,2.1 15,5 15,10c-0,1.8 -0.1,8.2 -0.2,14l-0,10l1.3,2.2c1.6,2.8 1.6,4.6 0,8.4c-1.3,3.1 -1.8,14 -0.7,16c1.1,2.6 7.8,1.6 9.4,-1.4c0.8,-1.6 0.2,-25 -0.7,-29c-2.4,-9 5.3,-14 26,-18c2.9,-0.5 6.6,-0.6 17,-0.7l13,-0l3.2,-3.3c5.4,-5.6 9.6,-7 16,-5.3c6.8,1.7 9,1.9 12,1.2c4.6,-0.9 5.9,-0.8 9.8,1.1c4.2,2.2 6.4,2.8 12,3.6c10,1.4 17,8.3 17,18c-0,14 -12,23 -25,19c-6.6,-1.9 -6.5,5.2 0.1,7.9c3,1.2 2.3,1.5 -2.7,1.3c-6.4,-0.2 -8.9,-2.8 -7.5,-8c0.6,-2.4 0.6,-2.9 0.1,-3.8c-1.2,-2.3 -7.4,-4.1 -8.8,-2.5c-1.5,1.7 -1.3,8.7 0.3,10c0.5,0.4 1.4,1.3 2.1,1.9c1.4,1.3 1.9,3.5 1.2,6.4c-0.6,2.7 -0.2,4 1.1,4.8c6.2,3.2 42,3.7 44,0.6c3.1,-3.9 -0.4,-7 -9.7,-8.4c-8.1,-1.1 -8.8,-1.5 -4.8,-2.4c5,-1.1 17,1.9 20,5c7.2,7.7 -22,14 -43,9.9c-6.7,-1.5 -9.6,-1.3 -10,0.9c-0.2,0.5 -0.8,2.6 -1.4,4.5l-1,3.5l0.4,18c0.2,10 0.4,20 0.4,22c-0,3.3 0,3.4 1.9,6.7c7.9,13 -10,23 -43,24c-3.7,0.1 -7,0.4 -7.5,0.6c-1.8,0.9 -0.1,4.4 3.1,6.6c2.7,1.7 3,3.4 0.7,4.3c-3.6,1.5 -9.9,-3 -13,-9.6l-1.4,-2.8l-3.2,-1.1c-1.7,-0.6 -4.8,-1.6 -6.8,-2.3c-8.1,-2.7 -11,-5.7 -13,-10c-0.6,-2 -1.1,-2.9 -1.9,-3.2c-1.3,-0.6 -8.3,-0.6 -12,0c-16,2.6 -34,-1.5 -34,-8.1c-0,-2.5 3,-5.6 5.6,-5.6c0.8,0 0.7,0 -0.2,1.8c-1.9,3.2 -0.3,5.1 6.2,7.6l4.1,1.5l8.4,0.1c8,0.1 8.7,0.1 13,-0.9c2.7,-0.5 6.5,-1.2 8.4,-1.3c3.2,-0.2 3.6,-0.3 4.5,-1.4l0.9,-1.1l-0.2,-17c-0.3,-19 -0.2,-19 -3.5,-23c-1.8,-2.3 -1.9,-4.8 -0.3,-8.1c1.4,-3 2.2,-10 1.2,-11c-1.5,-1.5 -7.2,0.8 -8.1,3.4c-1.1,3.2 -0.6,10 0.8,12c5,7.8 -1,13 -17,16c-6.3,1.1 -7.4,1.9 -7.1,4.8c0.1,1.3 0.1,1.9 -0.2,2c-1,0.3 -2.5,-0.3 -3.3,-1.6c-2.3,-3.8 -2.1,-3.8 -13,-5.6c-5.6,-0.9 -8.3,-1.8 -11,-3.9c-4.1,-2.6 -4.5,-4 -3.3,-11c0.7,-4.1 -0,-23 -1,-25c-1,-2.3 -1,-3.4 -0.2,-5.9c0.5,-1.6 0.5,-2 -0.1,-4.8c-0.8,-3 -0.8,-3 -0,-6.8c0.4,-2 0.7,-3.9 0.6,-4c-0,-0.1 -0.3,-4.8 -0.6,-10c-0.2,-5.6 -0.7,-11 -1,-13c-1.1,-5.5 0.2,-8.1 6,-10c9.4,-4.5 23,-5.8 36,-3.4m19,111c5.5,4 -4.2,11 -12,9.9c-1.9,-0.3 -1.6,-0.5 2.1,-1.2c7,-1.2 9,-3.7 6.2,-7.8l-1.4,-2l2.4,0.1c1.5,0.1 2.7,0.4 3.5,0.9m-33,9.6c0,0.3 -1.3,0.8 -2.4,0.8c-0.4,-0 -0.4,-0.1 0.1,-0.5c0.8,-0.6 2.2,-0.7 2.2,-0.2`
}, {
	name: "工厂",
	symbol: `path://M20 1420 c-20 -20 -20 -33 -20 -700 0 -667 0 -680 20 -700 20 -20 33
	-20 700 -20 667 0 680 0 700 20 20 20 20 33 20 700 0 667 0 680 -20 700 -20
	20 -33 20 -700 20 -667 0 -680 0 -700 -20z m1017 -732 c30 -34 43 -62 37 -84
	-3 -10 -50 -50 -105 -88 -54 -38 -111 -82 -126 -98 -15 -15 -31 -28 -36 -28
	-6 0 -35 -19 -66 -41 -122 -91 -143 -126 -100 -165 39 -35 42 -51 12 -79 -37
	-34 -58 -32 -85 9 -13 19 -37 42 -55 50 -34 16 -73 68 -73 98 0 11 -6 15 -21
	11 -23 -6 -68 39 -69 69 0 17 106 108 126 108 7 0 24 -16 38 -35 22 -28 25
	-38 16 -55 -16 -30 5 -25 52 13 62 49 235 202 310 273 75 71 109 81 145 42z`
}, {
	name: "改装",
	symbol: `path://m3.8,2.7c-1.3,1.5 -2.7,2.8 -3.1,2.9c-0.8,0.2 -1.1,388 -0.2,388c0.6,0 5.1,4.4 5.1,5.1c0,0.3 39,0.5 194,0.5c138,0 194,-0.1 194,-0.4c0,-0.2 1,-1.4 2.3,-2.8c1.3,-1.3 2.5,-2.3 2.8,-2.3c0.3,0 0.4,-55 0.4,-194c0,-148 -0.1,-194 -0.4,-194c-0.6,0 -5.1,-4.4 -5.1,-5.1c-0,-0.3 -39,-0.4 -194,-0.4l-194,0l-2.4,2.7m161,27c2.4,1.2 2.6,1.2 5.6,-0c2.7,-1.1 3.8,-1 6,0.8c1.3,1.1 1.1,1 6.7,0.3c1.7,-0.2 1.9,-0.1 3.9,1.6c2.1,1.8 2.1,1.8 4.1,1.5c4.1,-0.6 4.5,-0.5 6.6,1.8l1.9,2.1l3.3,0.2c3.2,0.1 3.3,0.2 4.1,1.5c1.6,2.7 3.1,4 4.9,4c3.1,0 5.7,2.1 5.7,4.6c0,0.8 2,2 3.8,2.3c2.5,0.3 3.6,1.3 4.2,3.9c0.5,2.4 1.4,3.4 3.7,4.2c2.3,0.7 3.3,1.8 3.6,3.9c0.3,2.9 0.9,3.8 2.7,4.8c3.1,1.7 3.4,2.2 3.4,5.3c0,2.6 0,2.8 1.2,3.8c3.8,3.2 3.6,3 3.4,6.1c-0.2,3.1 -0.1,3.4 2.3,5.9c1.6,1.6 1.8,3 0.8,5.8c-1.9,5.4 5.3,8.2 11,4.3c35,-23 81,-0.4 81,41c0,52 -68,70 -95,24c-4.1,-7 -10,-7.6 -11,-1c-0.3,2.5 -1.1,3.4 -4.1,4.4c-2.2,0.7 -2.8,1.4 -3.6,4.4c-0.5,2.1 -1,2.4 -4.3,3.2l-2.7,0.6l-1.2,2.5c-1.4,2.9 -2.3,3.5 -5.6,3.5c-1.9,0 -4.1,1.4 -4.1,2.7c0,1.4 -2,2.4 -5,2.4l-3,0l-2,2.2c-2.2,2.4 -2.5,2.5 -6.6,1.9c-2.1,-0.2 -2.2,-0.2 -3.9,1.2c-2.6,2.2 -3.3,2.3 -6.2,1.3l-2.5,-0.8l-2.3,1.4c-2.7,1.7 -3.6,1.7 -6.6,0.3l-2.2,-1l-2.7,1c-3,1.2 -4,1.1 -6.5,-0.8c-1.1,-0.8 -1.6,-1 -2.9,-0.8c-5.8,0.8 -5.3,0.9 -7.4,-0.8c-2.2,-1.9 -3,-2.2 -4.9,-1.6c-2.9,0.8 -3.6,0.6 -6.1,-1.9l-2.3,-2.4l-2.5,0c-3,0 -4,-0.3 -5.1,-2.4c-1.1,-2.3 -2.5,-3.2 -4.8,-3.2c-2.7,0 -3.4,-0.4 -4.7,-3.4c-1.2,-2.7 -1.7,-3.1 -4.2,-3.5c-2.5,-0.4 -3.5,-1.4 -4.1,-4c-0.4,-2.3 -1.5,-3.5 -3.5,-4c-2.8,-0.6 -4,-2.2 -4,-5.3c-0,-1.4 -1.2,-2.9 -3.3,-3.9c-2.1,-1 -2.6,-2.1 -2.6,-5.2c0,-2.2 -0.1,-2.5 -1.2,-3.4c-3.8,-3.2 -3.6,-2.9 -3.3,-6.2l0.2,-2.9l-2,-2.2c-2.2,-2.4 -2.4,-3.3 -1.3,-6.2c0.7,-2.1 0.5,-3 -1.2,-5.1c-1.6,-1.9 -1.8,-3.6 -0.6,-6c1,-2 1,-2.5 -0.4,-5c-1.4,-2.6 -1.4,-3.4 0,-5.9c1.4,-2.3 1.4,-3.4 0.3,-5.9c-0.9,-2.2 -0.8,-3.2 0.7,-5.1c2,-2.3 2.1,-2.8 1.4,-5.5c-0.7,-2.7 -0.4,-4.2 1.2,-5.4c1.9,-1.2 2.5,-2.9 2.2,-5.8c-0.2,-2.9 -0.1,-3.2 3.4,-5.9c1.2,-0.9 1.3,-1.1 1.4,-3.6c0,-3.3 0.5,-4.1 3.1,-5.3c2.4,-1 2.8,-1.6 3.2,-4.6c0.3,-2.5 1.3,-3.7 3.6,-4.3c2.3,-0.6 3.2,-1.5 3.8,-4c0.6,-2.6 1.5,-3.4 4.1,-3.8c2.6,-0.3 3.2,-0.7 4.2,-3.1c1.2,-2.8 1.9,-3.3 4.9,-3.6c2.7,-0.2 3.8,-0.7 4.4,-2c1.2,-2.7 2.3,-3.4 5.5,-3.4l3,0l2.1,-2.2l2.1,-2.2l3.4,0.2l3.4,0.2l1.9,-1.6c2,-1.8 3.1,-1.9 6.9,-0.7c1.6,0.5 1.7,0.4 3.8,-0.9c2.4,-1.7 3.6,-1.8 6.3,-0.4m-7.9,16c-16,2.3 -37,14 -37,20c-0,2.3 0.6,2.8 23,20c5.7,4.3 6.7,4.4 13,1.7c7.8,-3.2 7.5,-2.4 10,-22c2.8,-22 2.7,-22 -9.3,-20m26,2.5c-2.1,0.9 -2.7,2.5 -3.6,9.8c-0.3,2.8 -1,8.5 -1.6,12c-2.1,15 -1.9,16 4.9,21c5.7,4.3 6.1,4.3 15,0.5c2.7,-1.1 9,-3.7 13,-5.8c14,-5.8 14,-6.6 8.3,-14c-9.5,-12 -30,-26 -37,-23m-74,31c-6.1,5.2 -10,30 -7.8,43c1.5,7.7 3.3,8.3 12,4.1c2,-0.8 7,-3 11,-4.7c10,-4.2 11,-4.9 13,-6.2c2.2,-1.8 2.3,-2.1 3.5,-11c0.5,-4.2 -0.3,-5.1 -15,-16c-14,-11 -14,-11 -17,-8.7m111,16c-3.4,1.4 -9.2,3.8 -12,5.3c-13,5.5 -13,5.4 -14,14c-1,7.7 -1.3,7.3 15,19c11,8.7 12,9.6 14,9.6c6.9,0 13,-26 10,-42c-1.6,-10 -2.8,-10 -13,-6.3m-57,2.6c-14,5.3 -11,25 3.4,26c14,0.7 19,-19 6.2,-25c-2.6,-1.2 -7.3,-1.6 -9.7,-0.7m120,0.6c-3.3,1.5 -3.3,3.6 0.3,13c3.5,9.3 5,10 10,10c3.8,-0 5,-0.8 11,-8.7c5.8,-7.2 6.3,-8.7 3.4,-11c-4.2,-3.6 -20,-6.3 -25,-4.1m-16,6.3c-8.8,5.5 -15,17 -13,21c1.7,3.1 18,5.5 21,3.1c4.7,-3.1 4.9,-6.2 1.2,-16c-3.7,-10 -5.5,-11 -10,-8.8m50,7.8c-2.6,1.4 -12,13 -12,15c-1,6.1 2.5,9.2 12,11c12,2.1 14,1.1 12,-7.2c-2.1,-12 -8.6,-22 -13,-19m-174,15c-4.1,0.9 -30,12 -31,13c-4.6,4.6 10,21 26,29c14,6.9 15,6.4 17,-10c3.2,-25 3.4,-23 -2.8,-28c-5,-4 -6.5,-4.6 -9.3,-3.9m144,2.9c-7.9,2.4 -6.6,14 1.6,15c7.8,0.7 11,-8.5 5.8,-13c-2.3,-2 -4.4,-2.4 -7.5,-1.4m-109,3.8c-7.6,3.3 -7.2,2.3 -9.8,22c-2.4,19 -2.2,19 2.9,20c14,1 44,-13 44,-21c0,-1.9 -2.2,-3.9 -15,-13c-15,-11 -14,-11 -21,-7.7m74,1.9c-4.6,1.3 -4.3,9.7 0.7,19c5.2,10 7.4,10 16,0.4c6.8,-7.9 7.6,-12 3.1,-16c-2.4,-2.2 -16,-5.1 -20,-4.1m53,9.3c-2,0.7 -4.4,3.1 -5.2,5.3c-1.4,3.8 4.2,20 7.6,21c6,2.5 22,-17 18,-22c-1.8,-2.4 -17,-5.5 -21,-4.2m-24,8.8c-2.6,1.4 -12,13 -12,15c-1.2,6.8 23,12 28,6.7c2.5,-2.7 -4.5,-20 -8.8,-22c-1.7,-0.7 -5.6,-0.6 -7.1,0.1`
}, {
	name: "出击2"
}, {
	name: "其他",
	symbol: `diamond`
}]
const datalen = app.data.length

const that=({
	data: {
		branches: [
			['所有任务',[]],
			['自定义',[]],
			['第一甲板链', ['F21']],
			['第二甲板链', ['F23']],
			['第三甲板链', ['B117']],
			['岩井队链', ['F27']],
			['岩本队链', ['F30']],
			['基地航空链', ['F43', 'B81']],
			['喷气机', ['F46']],
			['夜战甲板员链', ['F46']],
			['F6F-5N链', 'F63'],
			['司令部要员1', ['D18']],
			['司令部要员2', ['B134']],
			['司令部要员3', ['B159']],
			['独立任务'],
			['非独立任务']
		],
		switches: app.initcache('switches', {
			fs: [false, true, true, true],
			fp: [true, true, true, true],
			fm: [true, true, true, true],
			fb: 0,
		}),
		current: null,
		down: true,
		discountInfo: [{
			preferenceName: '2242',
			preferenceExplain: 'ssds'
		}, {
			preferenceName: '2242',
			preferenceExplain: 'ssds'
		}, {
			preferenceName: '2242',
			preferenceExplain: 'ssds'
		}, {
			preferenceName: '2242',
			preferenceExplain: 'ssds'
		}],
		isExpand: false,
		toggleAnimationData: {}, // 优惠信息动画
		ec: {
			onInit: initChart
		}
	},
	onReady() {
		console.time('计时器4')
		// this.initChart()
	},
	expand() {
		w(222)
		// 少于两条数据就不需要展开了
		if (this.data.discountInfo.length < 2) return;
		let animation = wx.createAnimation({
			duration: 1000,
			timingFunction: 'ease-out'
		});
		if (this.data.isExpand) {
			// 如果是展开的，就让它收缩
			animation.height('0rpx').step();
		} else {
			// 如果是收缩的，就让它展开
			// 展开的高度是动态计算的，用一行的高度（50）去乘以数组的数量
			// 这里我曾经想过用height:'auto'这个属性，但是发现没法实现这个动画，所以换成了动态计算它的实际高度
			let height = this.data.discountInfo.length * 100 + 'rpx';
			animation.height(height).step();
		}
		this.setData({
			isExpand: !this.data.isExpand,
			toggleAnimationData: animation.export()
		});
	},
	filts(o) {
		let d = o.target.dataset
		let s = this.data.switches
		switch (d.c[1]) {
			case 's':
				s.fs[d.c[3]] = !s.fs[d.c[3]]
				break;
			case 'p':
				s.fp[d.c[3]] = !s.fp[d.c[3]]
				break;
			case 'm':
				s.fm[d.c[3]] = !s.fm[d.c[3]]
				break;
			case 'b':
				s.fb = o.detail.value
				s.fs[0] = true
				break;
			default:
				x(d)
				break;
		}
		this.setData({
			switches: s
		})
		setchart()
	},
	handset(o) {
		let d = o.target.dataset.c
		if (d == app.getstat(this.data.current.wiki_id)) return
		// z(d)
		// 		z(app.getstat(this.data.current.wiki_id))
		// 		z((this.data.current.wiki_id))
		// 		z((current.wiki_id))
		// 		z((current.guess))
		manual(this.data.current.wiki_id, d)
		update()
		current = datawk(this.data.current.wiki_id)
		setchart()
		pagecurrent()
		z(current, datawk(this.data.current.wiki_id))
		that.setData({
			current: current
		})
	},
	goreward() {
		wx.navigateTo({
			url: '../reward/index'
		})
	},
	clearStorage() {
		wx.clearStorage()
		z('cleared')
	},
	onShareAppMessage(res) {
		return {
			title: Math.random() > 0.5 ? '任务太多不知道做哪个？快用舰娘任务小程序' : '舰娘任务可以在小程序中管理啦！',
			path: '/pages/index/index',
			success: function () {},
			fail: function () {}
		}
	},
	onShareTimeline(res) {
		return {
			title: Math.random() > 0.5 ? '任务太多不知道做哪个？快用舰娘任务小程序' : '舰娘任务可以在小程序中管理啦！'
		}
	},
	onLoad() {
		those = this.data
		console.time('计时器1')
		switches = those.switches
		this.setData({
			current: ifnull(app.get('current'), app.data[0])
		})
		// this.setData({switches:	app.initcache('switches', {
		// 	fs: [false, true, true, true],
		// 	fp: [true, true, true, true],
		// 	fm: [true, true, true, true],
		// 	fb: 0,
		// })})
	},
	onShow() {
		console.time('计时器2')
	},
	onHide() {
		app.set('current', this.data.current)
		app.set('switches', this.data.switches)
	},
	onUnlad() {
		app.set('current', this.data.current)
		app.set('switches', this.data.switches)
	}
})

const tcache = "tcache"
const birth = app.periodstart('once', new Date())

// function keys(arr) {
// 	let k = []
// }
const blank = '    '
var size = 5
var repulsion = 1
let link = []
let edge = []
let valid = []
// let dawn = app.periodstart('daily', String(new Date()))

app.data.forEach(function (e, i) {
	e.guess = ifnull(app.getstat(e.wiki_id), 0)
	// e.star = ifnull(app.get('star'+e.wiki_id),false)
	// e.del = ifnull(app.get('del'+e.wiki_id),false)
	e.id = String(e.game_id)
	e.title = e.name
	e.name = ifnull(e.wiki_id, e.id)
	e.pre = wkids(e.prerequisite)
	e.prerequisite.forEach(function (p) {
		link.push({
			source: String(p),
			target: String(e.game_id),
			// lineStyle:{
			// 	color:'#333'
			// }
		})
	})
	e.post = wkids(postQuest[String(e.game_id)])
	e.categories = e.category
	e.description = ifnull(zhCN[String(e.game_id)], e.detail)
	e.itemStyle = {
		borderWidth: size * 0
	} //,borderColor:'transparent'}
	// s0(e)
	// e.symbol = "roundRect"
	// e.x=Math.random()*100
	// e.y=Math.random()*100
	switch (Number(e.type)) {
		case 1:
			e.value = ""
			e.period = 'once'
			break;
		case 2:
			e.value = "日"
			e.period = 'daily'
			break;
		case 3: //周常
			e.value = "週"
			e.period = 'weekly'
			break;
		case 4:
			e.value = "日"
			e.period = 'daily'
			break;
		case 5:
			e.value = "日"
			e.period = 'daily'
			break;
		case 6: //月常
			e.value = "月"
			e.period = 'monthly'
			break;
		case 7: //季常
			e.value = "季"
			e.period = 'seasonal'
			break;
		default:
			e.value = '年'
			e.period = 'annual'
			break;
	}
})
// import * as echarts from '../../ec-canvas/echarts';

// for(let key in postQuest){
//   postQuest[key].forEach(function(e){
//   link.push({
//     source: String(key),
// 		target: String(e),
// 		lineStyle:{
// 			color:'yellow'
// 		}
//   })})
// }
let current = app.data[0]
let switches, chartdata, reward, battle
let toolname = '舰娘任务管理器'
let focus = null
let master = ['A03']
let chain = []
var ex = {}
var ey = {}

const those = that.data
console.time('计时器1')
switches = those.switches
// this.setData({
// 	current: ifnull(app.get('current'), app.data[0])
// })
// this.setData({switches:	app.initcache('switches', {
// 	fs: [false, true, true, true],
// 	fp: [true, true, true, true],
// 	fm: [true, true, true, true],
// 	fb: 0,
// })})

didperiod(2)
pushlink('A03')

function pushlink(node) {
	app.data.forEach(function (e) {
		if (node == e.wiki_id) {
			e.pre.forEach(function (pre) {
				if (master.indexOf(pre) == -1) {
					master.push(pre)
					pushlink(pre)
				}
			})
			e.post.forEach(function (post) {
				if (master.indexOf(post) == -1) {
					master.push(post)
					pushlink(post)
				}
			})
		}
		return
	})
}

function datawk(wkid) {
	if (app.wktoi[wkid] != null && app.data[app.wktoi[wkid]] != null) {
		return app.data[app.wktoi[wkid]]
	} else {
		z(wkid + ' is not in app.data!', app.wktoi[wkid], app.data)
		option.title.text = '目标任务不存在：' + wkid
	}
}

function setwk(wkid, key, value) {
	if (app.wktoi[wkid] != null && app.data[app.wktoi[wkid]] != null) {
		app.data[app.wktoi[wkid]][key] = value
	} else {
		x(wkid, ' is not in app.data!', app.wktoi[wkid], app.data)
		option.title.text = '未找到目标任务：' + wkid
	}
}


function pushpre(list) {
	for (let i = 0; i < list.length; i++)
		datawk(list[i]).pre.forEach(function (pre) {
			if (list.indexOf(pre) == -1) {
				list.push(pre)
				pushpre(list)
			}
		})
	return list
}
// z(master)

function jump(wkid) {
	current = datawk(wkid)
	z([datawk(wkid).x, datawk(wkid).y])
	pagecurrent()
}

function pagecurrent() {
	that.setData({
		current: current
	})
}
// setTimeout(() => {
// 	jump('B37')
// }, 5000);

function report() {}
// function wkid(n){
// 	for(let i=0;i<datalen;i++){
// 		if(n==app.data[i].game_id)return app.data[i].wiki_id;
// 	}
// }
function wkids(arr) {
	if (!arr) return []
	let res = []
	arr.forEach(function (n) {
		res.push(app.wkid[String(n)])
	})
	return res
}

// function path(node, stat) {
// 	app.setstat(node, stat)
// 	affect(node, stat)
// }

function manual(node, stat) {
	app.setstat(node, stat)
	// setchart();
}

function affect(node, stat, n) {
	if (node == 'A59') z(node, stat, n)
	if (stat === null) return;
	n = ifnull(n, 0);
	n++
	if (n > datalen) {
		x("exeed limit ", n)
		return;
	}
	let e = datawk(node)
	if (e) {
		e.guess = stat
		if (stat > 0) {
			e.pre.forEach(function (pre) {
				affect(pre, 2, n)
			})
		}
		if (stat < 2) {
			e.post.forEach(function (post) {
				affect(post, 0, n)
			})
		}
	}
	// for (let i = 0; i < datalen; i++) {
	// 	let d = app.data[i]
	// 	if (node == d.wiki_id) {
	// 		d.guess = ifnull(stat, 0)
	// console.log(d.itemStyle)
	// setTimeout(function(){
	// if(Math.random()>0.94)setchart()
	// return
	// },300)
	// 	}
	// }
}

function trim(x) {
	return x.replace(/^\s+|\s+$/gm, '');
}

function s0(d, real) {
	d.name = d.wiki_id
	d.value = trim(d.value)
	d.itemStyle.borderColor = real ? 'rgba(255, 192, 203,0.7)' : 'rgb(255, 192, 203,0.5)'
}

function s1(d, real) {
	d.name = blank + d.wiki_id + (real ? '🟠' : '🟡')
	if (d.value.length == 1) d.value += blank; //function blank
	d.itemStyle.borderColor = real ? 'rgba(249, 132, 54, 0.7)' : 'rgba(255, 170, 85, 0.5)'
}

function s2(d, real) {
	// d.symbolSize = size * 2,
	d.name = blank + d.wiki_id + '☑️'
	if (d.value.length == 1) d.value += blank;
	d.itemStyle.borderColor = real ? 'rgba(31, 131, 131,0.7)' : 'rgb(82, 182, 182,0.5)'
}
let option = {
	left: 0,
	right: 0,
	top: 0,
	bottom: 0,
	center: focus,
	// large:true,
	color: ["#37A2DA", "#32C5E9", "#67E0E3", "#91F2DE", "#FFDB5C", "#FF9F7F"],
	title: {
		text: toolname,
		left: 'right',
		top: 'buttom',
		textStyle: {
			color: '#aaa',
		},
		z: 0
	},
	legend: [{
		orient: 'vertical',
		icon: 'circle',
		left: 0,
		top: "30%",
		data: categories.slice(1, 8),
		selectedMode: 'multiple'
	}],
	animationDurationUpdate: 1500,
	animationEasingUpdate: 'quinticInOut',
	nodeScaleRatio: 0.9,
	series: [{
		data: chain,
		links: edge,
		symbolSize: size * 5,
		type: 'graph',
		layout: 'force',
		draggable: true,
		force: {
			repulsion: repulsion * size * size * 10,
			initLayout: 'circular',
			// friction:0.4
		},
		// symbolSize: 20,
		roam: true,
		label: {
			show: true,
			formatter: "\n{b|{b}}\n{c|{c}}",
			fontWeight: 'bolder',
			color: 'black',
			fontSize: 18,
			// textBorderColor: 'white',
			rich: {
				b: {
					fontWeight: 'lighter',
					color: 'white',
					fontSize: 15,
					textBorderColor: 'black',
					textBorderWidth: 2,
					// textBorderColor: 'white',
					lineHeight: size
				},
				c: {
					align: 'right',
					fontWeight: 'bolder',
					color: '#e3ce60',
					fontSize: size * 2,
					fontStyle: 'oblique',
					// fontFamily:'SimSun',
					textBorderColor: '#222',
					textBorderWidth: size / 4,
					// borderColor: 'black',
					// borderWidth:2,
					// backgroundColor : '#444',
				}
			}
		},
		edgeSymbol: ['none', 'arrow'],
		// edgeSymbolSize: [4, 10],
		// edgeLabel: {
		// 		show:true,
		//     textStyle: {
		//       fontSize: 8
		//     }
		// },
		lineStyle: {
			normal: {
				opacity: 0.9,
				width: 3,
				curveness: 0
			}
		},
		categories: categories,
		focusNodeAdjacency: true,
		emphasis: {
			// label.rich.b.textBorderColor:'white',
			// itemStyle:{
			// 	color:'white',
			// },
			lineStyle: {
				width: size
			},
		},
		// animationThreshold:10,
	}],
	color: paint
};

function initChart(canvas, width, height, dpr) {
	// console.time('计时器5')
	// chart = echarts.init(canvas, null, {
	// 	width: width,
	// 	height: height,
	// 	devicePixelRatio: dpr // new
	// });
	// canvas.setChart(chart);
  // that.setData({switches:	app.initcache('switches', {
	// 	fs: [false, true, true, true],
	// 	fp: [true, true, true, true],
	// 	fm: [true, true, true, true],
	// 	fb: 0,
	// })})
	setchart();
	// z(chart._chartsViews)
	// chart.on('click', function (params) {
	// 	if (params.dataType == "node") {
	// 		current = params.data
	// 		that.data.down = true
	// 		current.button = ifnull(app.getstat(current.wiki_id), current.guess)
	// 		that.setData({
	// 			current: current,
	// 			down: that.data.down
	// 		})
	// 		z(params.data, [ex[params.data.wiki_id], ey[params.data.wiki_id]], app.valido[(params.data.wiki_id)])
	// 		// 	option.center=(chartdata._itemLayouts[params.dataIndex])
	// 		// setchart();
	// 	}
	// });
	// chart.getZr().on('click', function (event) {
	// 	if (!event.target) {
	// 		try {
	// 			that.data.down = false
	// 			that.setData({
	// 				down: that.data.down
	// 			})
	// 		} catch (e) {
	// 			w(e)
	// 		}
	// 	}
	// });
	// chart.on('highlight', function (params) {
	// 	// current=params.data
	// 	// that.setData({
	// 	// 	current:current,
	// 	// })
	// 	z('highlight', params);
	// });
	// console.timeEnd('计时器0')
	// console.timeEnd('计时器1')
	// console.timeEnd('计时器2')
	// console.timeEnd('计时器4')
	// console.timeEnd('计时器5')
	// return chart;
}

function ifnull(notnul, ifnul) {
	if (typeof (notnul) === 'undefined') {
		return ifnul
	} else {
		return notnul
	}
}

function eqifnull(notnul, ifnul) {
	if (typeof (notnul) === 'undefined') {
		notnul = ifnul
	}
}


function didperiod(type) {
	app.data.forEach(function (e) {
		let Bd0 = type == 2 ? e.type == 4 || e.type == 5 : false
		z(Bd0)
		if (e.type == 2 || Bd0) {
			app.setstat(e.wiki_id, 2)
		}
	})
}
let me = ['A62', 'A68', 'A70', 'A73', 'A78', 'A79', 'A80', 'A83', 'A87', 'B136', 'B138', 'B44', 'B137', 'B128', 'C22', 'C48', 'B58', 'B60']
update()
// for(let i=0;i<me.length;i++){
// 	let m=me[i]
// 	try {
// 	app.setstat(app.data[app.wktoi[m]],1)
// 	} catch (error) {
// 		z(m)
// 	}
// }
// function fistvisit() {
// 	if (!app.get('fistvisit')) {
// 		z('fistvisit')
// 		wx.clearStorage()
// 		didperiod(2)
// 	}
// 	app.set('fistvisit', true)
// }
// fistvisit()


// for (let i = 200; i < datalen; i++) {
// 	if (app.data[i].type > 1)
// 		z(app.beginutc(app.data[i].wiki_id, new Date()),app.data[i].period, )
// }
// setTimeout(() => {
// 	update();
// 	var dawn = app.periodstart('daily', String(new Date()))
// }, dawn + 10000000000);

function update() {
	try {
		app.data.forEach(function (e) {
			e.guess = 0
		})
	} catch (error) {
		z(app.data);
		return
	}
	let valid = [];
	z(app.get('history'))
	z($.cookie('history'));
	(app.get('history') || []).forEach(function (h) {
		let vali = {}
		vali[app.beginutc(h[0], h[2])] = [h[1], h[2]]
		app.valido[h[0]] = vali
		//以后可以设置跳过已遍历的index
	})
	for (let wkid in app.valido) {
		for (let dt in app.valido[wkid]) {
			valid.push([wkid, app.valido[wkid][dt][0], app.valido[wkid][dt][1]])
			if (dt == app.beginutc(wkid, new Date()))
				setwk(wkid, 'last', app.valido[wkid][app.beginutc(wkid, new Date())])
		}
	}
	z('v: ', app.valido, valid)
	//sort valid
	// valid.sort(sortdate)
	function sortdate(a, b) {
		return a[1] - b[1]
	}

	z('v: ', app.valido, valid)
	valid.forEach(function (v) {
		if (typeof (app.valido[v[0]][app.beginutc(v[0], new Date())]) != 'undefined') {
			let stat = app.valido[v[0]][app.beginutc(v[0], new Date())][0]
			if (stat != null)
				affect(v[0], stat)
		}
	})
	//guess s1
	app.data.forEach(function (e) {
		if (e.guess != 2) {
			let flag = true
			e.pre.forEach(function (p) {
				for (let i = 0; i < datalen; i++) {
					let node = app.data[i]
					if (node.wiki_id == p) {
						if (node.guess != 2) flag = false
						break
					}
				}
			})
			if (flag == true) {
				e.guess = 1
			}
		}
	})
}

function setchart() {
	//Filter
	z(switches.fb) 
	chain = []
	if (switches.fb != 0 && switches.fb < those.branches.length - 2) {
		those.branches[switches.fb][1].forEach(wkid => {
			datawk(wkid).target = true
		});
		pushpre(those.branches[switches.fb][1]).forEach(function (wkid) {
			chain.push(datawk(wkid))
		})
	} else {
		switch (Number(switches.fb)) {
			case 0:
				chain = JSON.parse(JSON.stringify(app.data))
				z(chain)
				break;
			case those.branches.length - 1:
				app.data.forEach(function (e) {
					if (master.indexOf(e.wiki_id) > -1) chain.push(e);
				})
				break;
			case those.branches.length - 2:
				app.data.forEach(function (e) {
					if (master.indexOf(e.wiki_id) == -1) chain.push(e);
				})
				break;
			default:
				break;
		}
	}
	that.setData({
		switches: switches
	})
	var cl = chain.length;
	while (cl--) {
		let c = chain[cl].guess
		if (switches.fs[0] && switches.fs[1] && switches.fs[2]) {} else {
			let status = false
			if ((!switches.fs[0]) && c == 0) status = true
			if ((!switches.fs[1]) && c == 1) status = true
			if ((!switches.fs[2]) && c == 2) status = true
			if (status) {
				chain.splice(cl, 1)
			}
		}
	}
	edge = []
	chain.forEach(function (e) {
		e.prerequisite.forEach(function (p) {
			edge.push({
				source: String(p),
				target: String(e.game_id),
				// lineStyle:{
				// 	color:'#333'
				// }
			})
		})
	})
	if (chain.length + edge.length > 920) {
		option.title.text = '画布承载超限\n\n部分箭头未显示'
		z("chain too lonng", chain.length, edge.length);
		// edge = link.slice(edge.length - 950 + edge.length, edge.length)
		edge = link.slice(0, 920 - edge.length - chain.length)
	} else {
		option.title.text = ''
	}
	chain.forEach(function (e) {
		switch (Number(e.guess)) {
			case 0:
				s0(e)
				break;
			case 1:
				s1(e)
				break;
			case 2:
				s2(e)
				break;
			default:
				x(e)
				break;
		}
		if (app.getstat(e.wiki_id) == e.guess) {
			switch (Number(app.getstat(e.wiki_id))) {
				case 0:
					s0(e, 1)
					break;
				case 1:
					s1(e, 1)
					break;
				case 2:
					s2(e, 1)
					break;
				default:
					x(e)
					break;
			}
		}
		if (e.star == true) {
			e.itemStyle.symbolSize = size * 10
		}
		if (ex.length) {
			e.x = ex[e.wiki_id]
			e.y = ey[e.wiki_id]
		}
	})
	z('chain:', chain.length, 'edge:', edge.length)
	option.series[0].data = chain
	chart.setOption(option)
	chartdata = chart._chartsViews[0]._symbolDraw._data
	z(chartdata, app.data)
	for (let i = 0; i < chartdata._idList.length; i++) {
		try {
			if (chartdata._itemLayouts[i]) {
				ex[app.wkid[chartdata._idList[i]]] = parseInt(chartdata._itemLayouts[i][0])
				ey[app.wkid[chartdata._idList[i]]] = parseInt(chartdata._itemLayouts[i][1])
			}
		} catch (error) {
			w(error, chartdata._itemLayouts, i)
			break;
		}
	}
	z('position', ex)
	if (chain.length) {
		// z(ex[chain[0].wiki_id])
		edge.forEach(function (link) {
			for (let ii = 0; ii < chain.length; ii++) {
				var ch = chain[ii]
				if (ex[ch.wiki_id] == null) break;
				if (ch.game_id == link.source) {
					try { //先得到id后渲染
						link.lineStyle = {
							color: {
								type: 'radial',
								x: ex[ch.wiki_id],
								y: ey[ch.wiki_id],
								r: 300,
								colorStops: [{
									offset: 0,
									color: ch.itemStyle.borderColor
								}, {
									offset: 1,
									color: '#777'
								}],
								global: true
							}
						}
					} catch (e) {
						w(ex[ch.wiki_id], ch.wiki_id, e)
					}
				}
				if (ch.game_id == link.target) {
					if ((typeof link.lineStyle) != 'undefined') {
						try {
							// if(link.lineStyle.color.r==300){
							link.lineStyle.color.r == 120
							link.lineStyle.color.colorStops = link.lineStyle.color.colorStops || [{
								offset: 0,
								color: '#777'
							}, {
								offset: 1,
								color: '#777'
							}]
							link.lineStyle.color.colorStops[1].color = ch.itemStyle.borderColor;
						} catch (e) {
							w(link.lineStyle, e)
						}
						// }
					}
					break;
				}

			}
		})
	}
	option.series[0].links = edge
	chart.setOption(option)
	setTimeout(() => {
		reward = []
		battle = []
		app.data.forEach(function (e, i) {
			if (e.requirements.category == "sortie") {
				addbattle(e,e.requirements)
			}else if(e.requirements.list) {
				for(i=0;i<e.requirements.list.length;i++){
					if (e.requirements.list[i].category == "sortie") {
					addbattle(e,e.requirements.list[i])}
				}
			}
			if (e.reward_other) {
				for (let i = 0; i < e.reward_other.length; i++) {
					if (e.reward_other[i].name) {
						addreward(e, e.reward_other[i]);
						// addreward(e, e.reward_other[i],5);
						addreward(e, e.reward_other[i],10);
						addreward(e, e.reward_other[i],11);
					} else {
						for (let j = 0; j < e.reward_other.length; j++){
							addreward(e, e.reward_other[i].choices[j]);
							// addreward(e, e.reward_other[i].choices[j],5);
							addreward(e, e.reward_other[i].choices[j],10);
							addreward(e, e.reward_other[i].choices[j],11);}
					}
				}
			}
		})
		z(reward)

		app.reward = reward
	}, 1200);
}

function addbattle(e, r) {
	// let name = r.name
	// let amount = ifnull(r.amount, 1)
	// if (!name) x(r)
	// reward[e.guess] = ifnull(reward[e.guess], {})
	// if (name.slice(0, 2) == "戦果") {
	// 	amount = name.slice(2, name.length)
	// 	name = "戦果"
	// }
	// reward[e.guess][name] = ifnull(reward[e.guess][name],{})
	// reward[e.guess][name][e.wiki_id]=ifnull(reward[e.guess][name][e.wiki_id],0)
	// reward[e.guess][name][e.wiki_id] += Number(amount)
}
function addreward(e, r ,guess) {//remove reward
	let name = r.name
	if (!name){ x(r)}else{
	let flag=false
	let amount = ifnull(r.amount, 1)
	if (name.slice(0, 2) == "戦果") {
		amount = name.slice(2, name.length)
		name = "戦果"}
	if(!guess){guess=e.guess;flag=true}else 
	// if(guess==5){flag= app.get('starreward').indexOf(name)>-1 }else
	if(guess==10){flag=e.guess<2}else
	if(guess==11){flag=true}
	if(flag)
	{reward[guess] = ifnull(reward[guess], {})
	reward[guess][name] = ifnull(reward[guess][name],{})
	reward[guess][name][e.wiki_id]=ifnull(reward[guess][name][e.wiki_id],0)
	reward[guess][name][e.wiki_id] += Number(amount)}

	}
}

initChart()